__check_pad3 = .init:0x80003100; // type:function size:0x40 scope:local
__set_debug_bba = .init:0x80003140; // type:function size:0xC scope:local
__get_debug_bba = .init:0x8000314C; // type:function size:0x8 scope:local
__start = .init:0x80003154; // type:function size:0x15C scope:weak
__init_registers = .init:0x800032B0; // type:function size:0x90 scope:local
__init_data = .init:0x80003340; // type:function size:0xC0 scope:local
__init_hardware = .init:0x80003400; // type:function size:0x24 scope:global
__flush_cache = .init:0x80003424; // type:function size:0x34 scope:global
memset = .init:0x80003458; // type:function size:0x30 scope:global
__fill_mem = .init:0x80003488; // type:function size:0xB8 scope:global
memcpy = .init:0x80003540; // type:function size:0x50 scope:global
fn_80003590 = .init:0x80003590; // type:function size:0x30
fn_800035C0 = .init:0x800035C0; // type:function size:0x24
gTRKInterruptVectorTable = .init:0x800035E4; // type:label scope:global
fn_80005518 = .init:0x80005518; // type:function size:0x104
gTRKInterruptVectorTableEnd = .init:0x80005518; // type:label scope:global
_rom_copy_info = .init:0x8000561C; // type:object size:0x6C scope:global data:4byte
_bss_init_info = .init:0x80005688; // type:object size:0x18 scope:global data:4byte
main = .text:0x800056A0; // type:function size:0x7AC scope:global
PPCMfmsr = .text:0x80005E4C; // type:function size:0x8 scope:global
PPCMtmsr = .text:0x80005E54; // type:function size:0x8 scope:global
PPCMfhid0 = .text:0x80005E5C; // type:function size:0x8 scope:global
fn_80005E64 = .text:0x80005E64; // type:function size:0x8
PPCMfl2cr = .text:0x80005E6C; // type:function size:0x8 scope:global
PPCMtl2cr = .text:0x80005E74; // type:function size:0x8 scope:global
PPCMtdec = .text:0x80005E7C; // type:function size:0x8 scope:weak
fn_80005E84 = .text:0x80005E84; // type:function size:0x8
PPCHalt = .text:0x80005E8C; // type:function size:0x14 scope:weak
PPCMtmmcr0 = .text:0x80005EA0; // type:function size:0x8 scope:global
PPCMtmmcr1 = .text:0x80005EA8; // type:function size:0x8 scope:global
PPCMtpmc1 = .text:0x80005EB0; // type:function size:0x8 scope:global
PPCMtpmc2 = .text:0x80005EB8; // type:function size:0x8 scope:global
PPCMtpmc3 = .text:0x80005EC0; // type:function size:0x8 scope:global
PPCMtpmc4 = .text:0x80005EC8; // type:function size:0x8 scope:global
PPCMffpscr = .text:0x80005ED0; // type:function size:0x20 scope:global
PPCMtfpscr = .text:0x80005EF0; // type:function size:0x28 scope:global
PPCMfhid2 = .text:0x80005F18; // type:function size:0x8 scope:global
PPCMthid2 = .text:0x80005F20; // type:function size:0x8 scope:global
PPCMtwpar = .text:0x80005F28; // type:function size:0x8 scope:global
PPCDisableSpeculation = .text:0x80005F30; // type:function size:0x28 scope:global
PPCSetFpNonIEEEMode = .text:0x80005F58; // type:function size:0x8 scope:global
__OSFPRInit = .text:0x80005F60; // type:function size:0x128 scope:global
fn_80006088 = .text:0x80006088; // type:function size:0x28
ClearArena = .text:0x800060B0; // type:function size:0x128 scope:local
InquiryCallback = .text:0x800061D8; // type:function size:0x3C scope:local
OSInit = .text:0x80006214; // type:function size:0x3D8 scope:global
OSExceptionInit = .text:0x800065EC; // type:function size:0x280 scope:local
__OSDBINTSTART = .text:0x8000686C; // type:label scope:global
__OSDBIntegrator = .text:0x8000686C; // type:function size:0x24 scope:local
__OSDBINTEND = .text:0x80006890; // type:label scope:global
fn_80006890 = .text:0x80006890; // type:function size:0x4
__OSDBJUMPEND = .text:0x80006894; // type:label scope:global
__OSSetExceptionHandler = .text:0x80006894; // type:function size:0x1C scope:global
__OSGetExceptionHandler = .text:0x800068B0; // type:function size:0x14 scope:global
__OSEVStart = .text:0x800068C4; // type:label scope:global
OSExceptionVector = .text:0x800068C4; // type:function size:0x9C scope:local
__DBVECTOR = .text:0x8000691C; // type:label scope:global data:4byte
__OSEVSetNumber = .text:0x8000692C; // type:label scope:global data:4byte
__OSEVEnd = .text:0x8000695C; // type:label scope:global
OSDefaultExceptionHandler = .text:0x80006960; // type:function size:0x58 scope:global
__OSPSInit = .text:0x800069B8; // type:function size:0x54 scope:global
fn_80006A0C = .text:0x80006A0C; // type:function size:0x14
OSRegisterVersion = .text:0x80006A20; // type:function size:0x2C scope:global
OSInitAlarm = .text:0x80006A4C; // type:function size:0x58 scope:global
OSCreateAlarm = .text:0x80006AA4; // type:function size:0x10 scope:global
InsertAlarm = .text:0x80006AB4; // type:function size:0x250 scope:local
OSSetAlarm = .text:0x80006D04; // type:function size:0x68 scope:global
fn_80006D6C = .text:0x80006D6C; // type:function size:0x11C
DecrementerExceptionCallback = .text:0x80006E88; // type:function size:0x230 scope:local
DecrementerExceptionHandler = .text:0x800070B8; // type:function size:0x50 scope:local
fn_80007108 = .text:0x80007108; // type:function size:0xA0
fn_800071A8 = .text:0x800071A8; // type:function size:0xAC
fn_80007254 = .text:0x80007254; // type:function size:0xFC
fn_80007350 = .text:0x80007350; // type:function size:0x7C
fn_800073CC = .text:0x800073CC; // type:function size:0x10
fn_800073DC = .text:0x800073DC; // type:function size:0x70
fn_8000744C = .text:0x8000744C; // type:function size:0x6C
OSGetArenaHi = .text:0x800074B8; // type:function size:0x8 scope:global
OSGetArenaLo = .text:0x800074C0; // type:function size:0x8 scope:global
OSSetArenaHi = .text:0x800074C8; // type:function size:0x8 scope:global
OSSetArenaLo = .text:0x800074D0; // type:function size:0x8 scope:global
__OSInitAudioSystem = .text:0x800074D8; // type:function size:0x1BC scope:global
__OSStopAudioSystem = .text:0x80007694; // type:function size:0xD8 scope:global
DCEnable = .text:0x8000776C; // type:function size:0x14 scope:global
DCInvalidateRange = .text:0x80007780; // type:function size:0x2C scope:global
DCFlushRange = .text:0x800077AC; // type:function size:0x30 scope:global
fn_800077DC = .text:0x800077DC; // type:function size:0x30
DCFlushRangeNoSync = .text:0x8000780C; // type:function size:0x2C scope:global
fn_80007838 = .text:0x80007838; // type:function size:0x2C
ICInvalidateRange = .text:0x80007864; // type:function size:0x34 scope:global
ICFlashInvalidate = .text:0x80007898; // type:function size:0x10 scope:global
ICEnable = .text:0x800078A8; // type:function size:0x14 scope:global
LCDisable = .text:0x800078BC; // type:function size:0x28 scope:global
L2GlobalInvalidate = .text:0x800078E4; // type:function size:0x98 scope:global
DMAErrorHandler = .text:0x8000797C; // type:function size:0x160 scope:global
__OSCacheInit = .text:0x80007ADC; // type:function size:0xF4 scope:global
__OSLoadFPUContext = .text:0x80007BD0; // type:function size:0x124 scope:local
__OSSaveFPUContext = .text:0x80007CF4; // type:function size:0x128 scope:local
OSSaveFPUContext = .text:0x80007E1C; // type:function size:0x8 scope:global
OSSetCurrentContext = .text:0x80007E24; // type:function size:0x5C scope:global
fn_80007E80 = .text:0x80007E80; // type:function size:0xC
fn_80007E8C = .text:0x80007E8C; // type:function size:0x80
OSLoadContext = .text:0x80007F0C; // type:function size:0xD8 scope:global
fn_80007FE4 = .text:0x80007FE4; // type:function size:0x8
OSClearContext = .text:0x80007FEC; // type:function size:0x24 scope:global
OSDumpContext = .text:0x80008010; // type:function size:0x2A8 scope:global
OSSwitchFPUContext = .text:0x800082B8; // type:function size:0x84 scope:local
__OSContextInit = .text:0x8000833C; // type:function size:0x48 scope:global
OSReport = .text:0x80008384; // type:function size:0x80 scope:global
fn_80008404 = .text:0x80008404; // type:function size:0x12C
OSSetErrorHandler = .text:0x80008530; // type:function size:0x218 scope:global
__OSUnhandledException = .text:0x80008748; // type:function size:0x2E8 scope:global
OSDisableInterrupts = .text:0x80008A30; // type:function size:0x14 scope:global
OSEnableInterrupts = .text:0x80008A44; // type:function size:0x14 scope:global
OSRestoreInterrupts = .text:0x80008A58; // type:function size:0x24 scope:global
__OSSetInterruptHandler = .text:0x80008A7C; // type:function size:0x1C scope:global
fn_80008A98 = .text:0x80008A98; // type:function size:0x14
__OSInterruptInit = .text:0x80008AAC; // type:function size:0x74 scope:global
fn_80008B20 = .text:0x80008B20; // type:function size:0x2D8
__OSMaskInterrupts = .text:0x80008DF8; // type:function size:0x88 scope:global
__OSUnmaskInterrupts = .text:0x80008E80; // type:function size:0x88 scope:global
fn_80008F08 = .text:0x80008F08; // type:function size:0x344
ExternalInterruptHandler = .text:0x8000924C; // type:function size:0x50 scope:local
fn_8000929C = .text:0x8000929C; // type:function size:0x4
fn_800092A0 = .text:0x800092A0; // type:function size:0x4
fn_800092A4 = .text:0x800092A4; // type:function size:0x2BC
fn_80009560 = .text:0x80009560; // type:function size:0x2E0
fn_80009840 = .text:0x80009840; // type:function size:0x24
fn_80009864 = .text:0x80009864; // type:function size:0x238
fn_80009A9C = .text:0x80009A9C; // type:function size:0x1D4
__OSModuleInit = .text:0x80009C70; // type:function size:0x18 scope:global
fn_80009C88 = .text:0x80009C88; // type:function size:0x60
fn_80009CE8 = .text:0x80009CE8; // type:function size:0xC8
fn_80009DB0 = .text:0x80009DB0; // type:function size:0xDC
fn_80009E8C = .text:0x80009E8C; // type:function size:0x3C
MEMIntrruptHandler = .text:0x80009EC8; // type:function size:0x6C scope:local
Config24MB = .text:0x80009F34; // type:function size:0x80 scope:local
Config48MB = .text:0x80009FB4; // type:function size:0x80 scope:local
RealMode = .text:0x8000A034; // type:function size:0x18 scope:local
__OSInitMemoryProtection = .text:0x8000A04C; // type:function size:0x118 scope:global
fn_8000A164 = .text:0x8000A164; // type:function size:0x70
fn_8000A1D4 = .text:0x8000A1D4; // type:function size:0x10
fn_8000A1E4 = .text:0x8000A1E4; // type:function size:0xC
__OSReboot = .text:0x8000A1F0; // type:function size:0x340 scope:global
OSRegisterResetFunction = .text:0x8000A530; // type:function size:0x84 scope:global
Reset = .text:0x8000A5B4; // type:function size:0x70 scope:local
fn_8000A624 = .text:0x8000A624; // type:function size:0x48
OSResetSystem = .text:0x8000A66C; // type:function size:0x2B8 scope:global
OSGetResetCode = .text:0x8000A924; // type:function size:0x30 scope:global
__OSResetSWInterruptHandler = .text:0x8000A954; // type:function size:0xF4 scope:global
fn_8000AA48 = .text:0x8000AA48; // type:function size:0x298
fn_8000ACE0 = .text:0x8000ACE0; // type:function size:0x60
fn_8000AD40 = .text:0x8000AD40; // type:function size:0x118
__OSInitSram = .text:0x8000AE58; // type:function size:0x13C scope:global
__OSLockSram = .text:0x8000AF94; // type:function size:0x5C scope:global
__OSLockSramEx = .text:0x8000AFF0; // type:function size:0x5C scope:global
fn_8000B04C = .text:0x8000B04C; // type:function size:0x33C
__OSUnlockSram = .text:0x8000B388; // type:function size:0x24 scope:global
__OSUnlockSramEx = .text:0x8000B3AC; // type:function size:0x24 scope:global
__OSSyncSram = .text:0x8000B3D0; // type:function size:0x10 scope:global
fn_8000B3E0 = .text:0x8000B3E0; // type:function size:0x84
fn_8000B464 = .text:0x8000B464; // type:function size:0xAC
OSGetGbsMode = .text:0x8000B510; // type:function size:0x70 scope:global
OSSetGbsMode = .text:0x8000B580; // type:function size:0xB8 scope:global
__OSSystemCallVectorStart = .text:0x8000B638; // type:label scope:global
fn_8000B638 = .text:0x8000B638; // type:function size:0x20
__OSSystemCallVectorEnd = .text:0x8000B654; // type:label scope:global
__OSInitSystemCall = .text:0x8000B658; // type:function size:0x64 scope:global
fn_8000B6BC = .text:0x8000B6BC; // type:function size:0x4
__OSThreadInit = .text:0x8000B6C0; // type:function size:0x158 scope:global
OSInitThreadQueue = .text:0x8000B818; // type:function size:0x10 scope:global
fn_8000B828 = .text:0x8000B828; // type:function size:0xC
OSDisableScheduler = .text:0x8000B834; // type:function size:0x40 scope:global
OSEnableScheduler = .text:0x8000B874; // type:function size:0x40 scope:global
fn_8000B8B4 = .text:0x8000B8B4; // type:function size:0x68
fn_8000B91C = .text:0x8000B91C; // type:function size:0x3C
fn_8000B958 = .text:0x8000B958; // type:function size:0x1C0
SelectThread = .text:0x8000BB18; // type:function size:0x228 scope:local
__OSReschedule = .text:0x8000BD40; // type:function size:0x30 scope:global
OSCancelThread = .text:0x8000BD70; // type:function size:0x1BC scope:global
fn_8000BF2C = .text:0x8000BF2C; // type:function size:0x288
fn_8000C1B4 = .text:0x8000C1B4; // type:function size:0x170
fn_8000C324 = .text:0x8000C324; // type:function size:0xEC
fn_8000C410 = .text:0x8000C410; // type:function size:0x104
OSClearStack = .text:0x8000C514; // type:function size:0xAC scope:global
OSGetTime = .text:0x8000C5C0; // type:function size:0x18 scope:global
OSGetTick = .text:0x8000C5D8; // type:function size:0x8 scope:global
__OSGetSystemTime = .text:0x8000C5E0; // type:function size:0x64 scope:global
InitMetroTRK_BBA = .text:0x8000C644; // type:function size:0x4 scope:weak
__init_user = .text:0x8000C648; // type:function size:0x20 scope:global
__init_cpp = .text:0x8000C668; // type:function size:0x54 scope:local
_ExitProcess = .text:0x8000C6BC; // type:function size:0x20 scope:global
SetExiInterruptMask = .text:0x8000C6DC; // type:function size:0xF4 scope:local
EXIImm = .text:0x8000C7D0; // type:function size:0x25C scope:global
fn_8000CA2C = .text:0x8000CA2C; // type:function size:0xA0
EXIDma = .text:0x8000CACC; // type:function size:0xEC scope:global
EXISync = .text:0x8000CBB8; // type:function size:0x24C scope:global
EXIClearInterrupts = .text:0x8000CE04; // type:function size:0x48 scope:global
__EXIProbe = .text:0x8000CE4C; // type:function size:0x174 scope:local
fn_8000CFC0 = .text:0x8000CFC0; // type:function size:0x10C
fn_8000D0CC = .text:0x8000D0CC; // type:function size:0xBC
EXISelect = .text:0x8000D188; // type:function size:0x12C scope:global
EXIDeselect = .text:0x8000D2B4; // type:function size:0x110 scope:global
EXIIntrruptHandler = .text:0x8000D3C4; // type:function size:0xC8 scope:local
TCIntrruptHandler = .text:0x8000D48C; // type:function size:0x218 scope:local
EXTIntrruptHandler = .text:0x8000D6A4; // type:function size:0xD0 scope:local
EXIInit = .text:0x8000D774; // type:function size:0x1D4 scope:global
EXILock = .text:0x8000D948; // type:function size:0xF4 scope:global
EXIUnlock = .text:0x8000DA3C; // type:function size:0xDC scope:global
UnlockedHandler = .text:0x8000DB18; // type:function size:0x28 scope:local
EXIGetID = .text:0x8000DB40; // type:function size:0x3B0 scope:global
fn_8000DEF0 = .text:0x8000DEF0; // type:function size:0x18C
__OSEnableBarnacle = .text:0x8000E07C; // type:function size:0x1BC scope:global
fn_8000E238 = .text:0x8000E238; // type:function size:0x70
fn_8000E2A8 = .text:0x8000E2A8; // type:function size:0x21C
fn_8000E4C4 = .text:0x8000E4C4; // type:function size:0x20
fn_8000E4E4 = .text:0x8000E4E4; // type:function size:0x3C
fn_8000E520 = .text:0x8000E520; // type:function size:0x2FC
SIInterruptHandler = .text:0x8000E81C; // type:function size:0x344 scope:local
fn_8000EB60 = .text:0x8000EB60; // type:function size:0x98
fn_8000EBF8 = .text:0x8000EBF8; // type:function size:0xCC
fn_8000ECC4 = .text:0x8000ECC4; // type:function size:0xF4
SIInit = .text:0x8000EDB8; // type:function size:0xB4 scope:global
fn_8000EE6C = .text:0x8000EE6C; // type:function size:0x20C
fn_8000F078 = .text:0x8000F078; // type:function size:0x7C
fn_8000F0F4 = .text:0x8000F0F4; // type:function size:0x14
SISetXY = .text:0x8000F108; // type:function size:0x6C scope:global
fn_8000F174 = .text:0x8000F174; // type:function size:0x9C
fn_8000F210 = .text:0x8000F210; // type:function size:0x6C
fn_8000F27C = .text:0x8000F27C; // type:function size:0xD4
fn_8000F350 = .text:0x8000F350; // type:function size:0xC4
fn_8000F414 = .text:0x8000F414; // type:function size:0x8C
SITransfer = .text:0x8000F4A0; // type:function size:0x16C scope:global
GetTypeCallback = .text:0x8000F60C; // type:function size:0x298 scope:local
SIGetType = .text:0x8000F8A4; // type:function size:0x1C4 scope:global
fn_8000FA68 = .text:0x8000FA68; // type:function size:0x13C
SISetSamplingRate = .text:0x8000FBA4; // type:function size:0xE4 scope:global
fn_8000FC88 = .text:0x8000FC88; // type:function size:0x24
DBInit = .text:0x8000FCAC; // type:function size:0x28 scope:global
fn_8000FCD4 = .text:0x8000FCD4; // type:function size:0x48
__DBExceptionDestination = .text:0x8000FD1C; // type:function size:0x10 scope:global
__DBIsExceptionMarked = .text:0x8000FD2C; // type:function size:0x1C scope:global
DBPrintf = .text:0x8000FD48; // type:function size:0x50 scope:global
fn_8000FD98 = .text:0x8000FD98; // type:function size:0x2C
fn_8000FDC4 = .text:0x8000FDC4; // type:function size:0x28
fn_8000FDEC = .text:0x8000FDEC; // type:function size:0x18C
fn_8000FF78 = .text:0x8000FF78; // type:function size:0x98
fn_80010010 = .text:0x80010010; // type:function size:0x44
fn_80010054 = .text:0x80010054; // type:function size:0x3C
__DVDInitWA = .text:0x80010090; // type:function size:0x40 scope:weak
__DVDInterruptHandler = .text:0x800100D0; // type:function size:0x2E0 scope:weak
fn_800103B0 = .text:0x800103B0; // type:function size:0x84
AlarmHandlerForTimeout = .text:0x80010434; // type:function size:0x70 scope:local
fn_800104A4 = .text:0x800104A4; // type:function size:0x110
fn_800105B4 = .text:0x800105B4; // type:function size:0x80
fn_80010634 = .text:0x80010634; // type:function size:0x298
fn_800108CC = .text:0x800108CC; // type:function size:0x94
DVDLowWaitCoverClose = .text:0x80010960; // type:function size:0x2C scope:weak
fn_8001098C = .text:0x8001098C; // type:function size:0xA4
DVDLowStopMotor = .text:0x80010A30; // type:function size:0x8C scope:weak
fn_80010ABC = .text:0x80010ABC; // type:function size:0x8C
fn_80010B48 = .text:0x80010B48; // type:function size:0x9C
fn_80010BE4 = .text:0x80010BE4; // type:function size:0x98
fn_80010C7C = .text:0x80010C7C; // type:function size:0x8C
fn_80010D08 = .text:0x80010D08; // type:function size:0x9C
DVDLowReset = .text:0x80010DA4; // type:function size:0xBC scope:global
fn_80010E60 = .text:0x80010E60; // type:function size:0x14
fn_80010E74 = .text:0x80010E74; // type:function size:0x1C
__DVDLowSetWAType = .text:0x80010E90; // type:function size:0x44 scope:global
fn_80010ED4 = .text:0x80010ED4; // type:function size:0x38
__DVDFSInit = .text:0x80010F0C; // type:function size:0x38 scope:global
fn_80010F44 = .text:0x80010F44; // type:function size:0x4
DVDInit = .text:0x80010F48; // type:function size:0xCC scope:global
fn_80011014 = .text:0x80011014; // type:function size:0x94
fn_800110A8 = .text:0x800110A8; // type:function size:0x8C
cbForStateError = .text:0x80011134; // type:function size:0xAC scope:local
fn_800111E0 = .text:0x800111E0; // type:function size:0x34
fn_80011214 = .text:0x80011214; // type:function size:0x28
fn_8001123C = .text:0x8001123C; // type:function size:0xB4
fn_800112F0 = .text:0x800112F0; // type:function size:0x294
fn_80011584 = .text:0x80011584; // type:function size:0x68
fn_800115EC = .text:0x800115EC; // type:function size:0x98
fn_80011684 = .text:0x80011684; // type:function size:0x28
fn_800116AC = .text:0x800116AC; // type:function size:0x158
fn_80011804 = .text:0x80011804; // type:function size:0xE0
fn_800118E4 = .text:0x800118E4; // type:function size:0x34
fn_80011918 = .text:0x80011918; // type:function size:0x34
fn_8001194C = .text:0x8001194C; // type:function size:0x74
fn_800119C0 = .text:0x800119C0; // type:function size:0x38
fn_800119F8 = .text:0x800119F8; // type:function size:0x114
fn_80011B0C = .text:0x80011B0C; // type:function size:0xE4
fn_80011BF0 = .text:0x80011BF0; // type:function size:0xFC
AlarmHandler = .text:0x80011CEC; // type:function size:0x44 scope:local
fn_80011D30 = .text:0x80011D30; // type:function size:0xCC
fn_80011DFC = .text:0x80011DFC; // type:function size:0x30
fn_80011E2C = .text:0x80011E2C; // type:function size:0x70
fn_80011E9C = .text:0x80011E9C; // type:function size:0x28
cbForStateMotorStopped = .text:0x80011EC4; // type:function size:0xE4 scope:local
stateReady = .text:0x80011FA8; // type:function size:0x230 scope:local
stateBusy = .text:0x800121D8; // type:function size:0x320 scope:local
fn_800124F8 = .text:0x800124F8; // type:function size:0x638
fn_80012B30 = .text:0x80012B30; // type:function size:0xDC
fn_80012C0C = .text:0x80012C0C; // type:function size:0xD0
DVDReadDiskID = .text:0x80012CDC; // type:function size:0xD4 scope:global
fn_80012DB0 = .text:0x80012DB0; // type:function size:0xBC
DVDInquiryAsync = .text:0x80012E6C; // type:function size:0xD0 scope:global
DVDReset = .text:0x80012F3C; // type:function size:0x44 scope:global
fn_80012F80 = .text:0x80012F80; // type:function size:0x4C
DVDGetDriveStatus = .text:0x80012FCC; // type:function size:0xAC scope:global
fn_80013078 = .text:0x80013078; // type:function size:0x10
fn_80013088 = .text:0x80013088; // type:function size:0x50
fn_800130D8 = .text:0x800130D8; // type:function size:0x27C
fn_80013354 = .text:0x80013354; // type:function size:0x8
fn_8001335C = .text:0x8001335C; // type:function size:0xF8
fn_80013454 = .text:0x80013454; // type:function size:0x11C
fn_80013570 = .text:0x80013570; // type:function size:0x38
__DVDClearWaitingQueue = .text:0x800135A8; // type:function size:0x38 scope:global
__DVDPushWaitingQueue = .text:0x800135E0; // type:function size:0x68 scope:global
__DVDPopWaitingQueue = .text:0x80013648; // type:function size:0xA0 scope:global
__DVDCheckWaitingQueue = .text:0x800136E8; // type:function size:0x58 scope:global
fn_80013740 = .text:0x80013740; // type:function size:0x60
ErrorCode2Num = .text:0x800137A0; // type:function size:0x11C scope:local
__DVDStoreErrorCode = .text:0x800138BC; // type:function size:0x7C scope:global
fn_80013938 = .text:0x80013938; // type:function size:0xF8
fn_80013A30 = .text:0x80013A30; // type:function size:0x30
cb = .text:0x80013A60; // type:function size:0xD8 scope:local
__fstLoad = .text:0x80013B38; // type:function size:0x168 scope:global
fn_80013CA0 = .text:0x80013CA0; // type:function size:0x274
fn_80013F14 = .text:0x80013F14; // type:function size:0xA0
fn_80013FB4 = .text:0x80013FB4; // type:function size:0x200
fn_800141B4 = .text:0x800141B4; // type:function size:0x4B0
fn_80014664 = .text:0x80014664; // type:function size:0x54
fn_800146B8 = .text:0x800146B8; // type:function size:0x2D4
fn_8001498C = .text:0x8001498C; // type:function size:0x1A0
fn_80014B2C = .text:0x80014B2C; // type:function size:0x828
fn_80015354 = .text:0x80015354; // type:function size:0x130
fn_80015484 = .text:0x80015484; // type:function size:0x6C
fn_800154F0 = .text:0x800154F0; // type:function size:0x7C
fn_8001556C = .text:0x8001556C; // type:function size:0x3C
fn_800155A8 = .text:0x800155A8; // type:function size:0x68
fn_80015610 = .text:0x80015610; // type:function size:0x9C
fn_800156AC = .text:0x800156AC; // type:function size:0x98
VIGetTvFormat = .text:0x80015744; // type:function size:0x68 scope:global
fn_800157AC = .text:0x800157AC; // type:function size:0x21C
fn_800159C8 = .text:0x800159C8; // type:function size:0x60
fn_80015A28 = .text:0x80015A28; // type:function size:0x74
fn_80015A9C = .text:0x80015A9C; // type:function size:0x154
fn_80015BF0 = .text:0x80015BF0; // type:function size:0xD4
fn_80015CC4 = .text:0x80015CC4; // type:function size:0x11C
fn_80015DE0 = .text:0x80015DE0; // type:function size:0x48
fn_80015E28 = .text:0x80015E28; // type:function size:0xE8
fn_80015F10 = .text:0x80015F10; // type:function size:0x84
fn_80015F94 = .text:0x80015F94; // type:function size:0x68
fn_80015FFC = .text:0x80015FFC; // type:function size:0x8
fn_80016004 = .text:0x80016004; // type:function size:0xF4
fn_800160F8 = .text:0x800160F8; // type:function size:0xBC
fn_800161B4 = .text:0x800161B4; // type:function size:0x1BC
fn_80016370 = .text:0x80016370; // type:function size:0x1E0
fn_80016550 = .text:0x80016550; // type:function size:0x25C
fn_800167AC = .text:0x800167AC; // type:function size:0x310
fn_80016ABC = .text:0x80016ABC; // type:function size:0xC4
fn_80016B80 = .text:0x80016B80; // type:function size:0x198
fn_80016D18 = .text:0x80016D18; // type:function size:0xCC
fn_80016DE4 = .text:0x80016DE4; // type:function size:0xD4
fn_80016EB8 = .text:0x80016EB8; // type:function size:0x394
fn_8001724C = .text:0x8001724C; // type:function size:0x58
fn_800172A4 = .text:0x800172A4; // type:function size:0x96C
fn_80017C10 = .text:0x80017C10; // type:function size:0x130
fn_80017D40 = .text:0x80017D40; // type:function size:0x114
fn_80017E54 = .text:0x80017E54; // type:function size:0x1A4
fn_80017FF8 = .text:0x80017FF8; // type:function size:0xC4
fn_800180BC = .text:0x800180BC; // type:function size:0xCC
fn_80018188 = .text:0x80018188; // type:function size:0xD8
fn_80018260 = .text:0x80018260; // type:function size:0x32C
fn_8001858C = .text:0x8001858C; // type:function size:0x140
fn_800186CC = .text:0x800186CC; // type:function size:0x110
fn_800187DC = .text:0x800187DC; // type:function size:0x114
fn_800188F0 = .text:0x800188F0; // type:function size:0x150
fn_80018A40 = .text:0x80018A40; // type:function size:0x300
fn_80018D40 = .text:0x80018D40; // type:function size:0x60
fn_80018DA0 = .text:0x80018DA0; // type:function size:0x174
fn_80018F14 = .text:0x80018F14; // type:function size:0x174
fn_80019088 = .text:0x80019088; // type:function size:0x470
fn_800194F8 = .text:0x800194F8; // type:function size:0xBC
fn_800195B4 = .text:0x800195B4; // type:function size:0x60
fn_80019614 = .text:0x80019614; // type:function size:0x54
__PADDisableRecalibration = .text:0x80019668; // type:function size:0x7C scope:global
fn_800196E4 = .text:0x800196E4; // type:function size:0x44
fn_80019728 = .text:0x80019728; // type:function size:0x88
fn_800197B0 = .text:0x800197B0; // type:function size:0x10
fn_800197C0 = .text:0x800197C0; // type:function size:0x18
fn_800197D8 = .text:0x800197D8; // type:function size:0xD8
fn_800198B0 = .text:0x800198B0; // type:function size:0x10
fn_800198C0 = .text:0x800198C0; // type:function size:0xE0
fn_800199A0 = .text:0x800199A0; // type:function size:0x14
fn_800199B4 = .text:0x800199B4; // type:function size:0xD4
fn_80019A88 = .text:0x80019A88; // type:function size:0x10
fn_80019A98 = .text:0x80019A98; // type:function size:0x1C
fn_80019AB4 = .text:0x80019AB4; // type:function size:0x10
fn_80019AC4 = .text:0x80019AC4; // type:function size:0x1C
fn_80019AE0 = .text:0x80019AE0; // type:function size:0x10
fn_80019AF0 = .text:0x80019AF0; // type:function size:0x16C
fn_80019C5C = .text:0x80019C5C; // type:function size:0xC
fn_80019C68 = .text:0x80019C68; // type:function size:0x7C
fn_80019CE4 = .text:0x80019CE4; // type:function size:0xAC
fn_80019D90 = .text:0x80019D90; // type:function size:0x58
fn_80019DE8 = .text:0x80019DE8; // type:function size:0x1E4
fn_80019FCC = .text:0x80019FCC; // type:function size:0xFC
fn_8001A0C8 = .text:0x8001A0C8; // type:function size:0x24
fn_8001A0EC = .text:0x8001A0EC; // type:function size:0x190
GXInit = .text:0x8001A27C; // type:function size:0x798 scope:global
__GXInitGX = .text:0x8001AA14; // type:function size:0x938 scope:global
fn_8001B34C = .text:0x8001B34C; // type:function size:0x134
GXInitFifoBase = .text:0x8001B480; // type:function size:0x6C scope:global
fn_8001B4EC = .text:0x8001B4EC; // type:function size:0x70
fn_8001B55C = .text:0x8001B55C; // type:function size:0xC
GXSetCPUFifo = .text:0x8001B568; // type:function size:0x128 scope:global
GXSetGPFifo = .text:0x8001B690; // type:function size:0x178 scope:global
fn_8001B808 = .text:0x8001B808; // type:function size:0x50
fn_8001B858 = .text:0x8001B858; // type:function size:0x8
fn_8001B860 = .text:0x8001B860; // type:function size:0x8
fn_8001B868 = .text:0x8001B868; // type:function size:0x44
__GXFifoInit = .text:0x8001B8AC; // type:function size:0x4C scope:global
fn_8001B8F8 = .text:0x8001B8F8; // type:function size:0x24
fn_8001B91C = .text:0x8001B91C; // type:function size:0x24
fn_8001B940 = .text:0x8001B940; // type:function size:0x34
fn_8001B974 = .text:0x8001B974; // type:function size:0x30
fn_8001B9A4 = .text:0x8001B9A4; // type:function size:0x30
fn_8001B9D4 = .text:0x8001B9D4; // type:function size:0x100
fn_8001BAD4 = .text:0x8001BAD4; // type:function size:0x8
fn_8001BADC = .text:0x8001BADC; // type:function size:0x8
fn_8001BAE4 = .text:0x8001BAE4; // type:function size:0x26C
fn_8001BD50 = .text:0x8001BD50; // type:function size:0xBC
fn_8001BE0C = .text:0x8001BE0C; // type:function size:0x124
fn_8001BF30 = .text:0x8001BF30; // type:function size:0x38
fn_8001BF68 = .text:0x8001BF68; // type:function size:0x25C
fn_8001C1C4 = .text:0x8001C1C4; // type:function size:0x280
fn_8001C444 = .text:0x8001C444; // type:function size:0x9C
fn_8001C4E0 = .text:0x8001C4E0; // type:function size:0x8C
fn_8001C56C = .text:0x8001C56C; // type:function size:0x10
fn_8001C57C = .text:0x8001C57C; // type:function size:0x280
fn_8001C7FC = .text:0x8001C7FC; // type:function size:0x3C
GXSetMisc = .text:0x8001C838; // type:function size:0x94 scope:global
fn_8001C8CC = .text:0x8001C8CC; // type:function size:0x5C
fn_8001C928 = .text:0x8001C928; // type:function size:0x16C
fn_8001CA94 = .text:0x8001CA94; // type:function size:0x170
fn_8001CC04 = .text:0x8001CC04; // type:function size:0xB4
fn_8001CCB8 = .text:0x8001CCB8; // type:function size:0xC
fn_8001CCC4 = .text:0x8001CCC4; // type:function size:0x80
fn_8001CD44 = .text:0x8001CD44; // type:function size:0x24
fn_8001CD68 = .text:0x8001CD68; // type:function size:0x14
fn_8001CD7C = .text:0x8001CD7C; // type:function size:0x20
fn_8001CD9C = .text:0x8001CD9C; // type:function size:0x18
fn_8001CDB4 = .text:0x8001CDB4; // type:function size:0x64
fn_8001CE18 = .text:0x8001CE18; // type:function size:0x18
fn_8001CE30 = .text:0x8001CE30; // type:function size:0x24
fn_8001CE54 = .text:0x8001CE54; // type:function size:0x18
fn_8001CE6C = .text:0x8001CE6C; // type:function size:0x20
fn_8001CE8C = .text:0x8001CE8C; // type:function size:0x44
fn_8001CED0 = .text:0x8001CED0; // type:function size:0x88
fn_8001CF58 = .text:0x8001CF58; // type:function size:0x44
fn_8001CF9C = .text:0x8001CF9C; // type:function size:0x80
__GXPEInit = .text:0x8001D01C; // type:function size:0x74 scope:global
fn_8001D090 = .text:0x8001D090; // type:function size:0x80
fn_8001D110 = .text:0x8001D110; // type:function size:0xD0
fn_8001D1E0 = .text:0x8001D1E0; // type:function size:0x88
fn_8001D268 = .text:0x8001D268; // type:function size:0x40
fn_8001D2A8 = .text:0x8001D2A8; // type:function size:0x40
fn_8001D2E8 = .text:0x8001D2E8; // type:function size:0x48
fn_8001D330 = .text:0x8001D330; // type:function size:0x44
fn_8001D374 = .text:0x8001D374; // type:function size:0x34
fn_8001D3A8 = .text:0x8001D3A8; // type:function size:0x24
fn_8001D3CC = .text:0x8001D3CC; // type:function size:0x144
fn_8001D510 = .text:0x8001D510; // type:function size:0x7C
fn_8001D58C = .text:0x8001D58C; // type:function size:0x7C
fn_8001D608 = .text:0x8001D608; // type:function size:0x34
fn_8001D63C = .text:0x8001D63C; // type:function size:0x130
fn_8001D76C = .text:0x8001D76C; // type:function size:0x24
fn_8001D790 = .text:0x8001D790; // type:function size:0x58
fn_8001D7E8 = .text:0x8001D7E8; // type:function size:0x238
fn_8001DA20 = .text:0x8001DA20; // type:function size:0xCC
fn_8001DAEC = .text:0x8001DAEC; // type:function size:0x78
fn_8001DB64 = .text:0x8001DB64; // type:function size:0x208
fn_8001DD6C = .text:0x8001DD6C; // type:function size:0x14
fn_8001DD80 = .text:0x8001DD80; // type:function size:0x168
fn_8001DEE8 = .text:0x8001DEE8; // type:function size:0x18C
fn_8001E074 = .text:0x8001E074; // type:function size:0x38
fn_8001E0AC = .text:0x8001E0AC; // type:function size:0xF0
fn_8001E19C = .text:0x8001E19C; // type:function size:0xF0
fn_8001E28C = .text:0x8001E28C; // type:function size:0x3C
fn_8001E2C8 = .text:0x8001E2C8; // type:function size:0xB8
fn_8001E380 = .text:0x8001E380; // type:function size:0xC8
fn_8001E448 = .text:0x8001E448; // type:function size:0x24C
fn_8001E694 = .text:0x8001E694; // type:function size:0x164
fn_8001E7F8 = .text:0x8001E7F8; // type:function size:0x8
fn_8001E800 = .text:0x8001E800; // type:function size:0x18
fn_8001E818 = .text:0x8001E818; // type:function size:0x17C
fn_8001E994 = .text:0x8001E994; // type:function size:0x54
GXInitTexCacheRegion = .text:0x8001E9E8; // type:function size:0xF4 scope:global
GXInitTlutRegion = .text:0x8001EADC; // type:function size:0x38 scope:global
fn_8001EB14 = .text:0x8001EB14; // type:function size:0x48
fn_8001EB5C = .text:0x8001EB5C; // type:function size:0x14
fn_8001EB70 = .text:0x8001EB70; // type:function size:0x14
fn_8001EB84 = .text:0x8001EB84; // type:function size:0x7C
fn_8001EC00 = .text:0x8001EC00; // type:function size:0x64
fn_8001EC64 = .text:0x8001EC64; // type:function size:0xA0
fn_8001ED04 = .text:0x8001ED04; // type:function size:0x17C
__GXSetTmemConfig = .text:0x8001EE80; // type:function size:0x354 scope:global
fn_8001F1D4 = .text:0x8001F1D4; // type:function size:0x6C
fn_8001F240 = .text:0x8001F240; // type:function size:0x178
fn_8001F3B8 = .text:0x8001F3B8; // type:function size:0x144
fn_8001F4FC = .text:0x8001F4FC; // type:function size:0xEC
fn_8001F5E8 = .text:0x8001F5E8; // type:function size:0x24
fn_8001F60C = .text:0x8001F60C; // type:function size:0x48
fn_8001F654 = .text:0x8001F654; // type:function size:0x4
__GXSetIndirectMask = .text:0x8001F658; // type:function size:0x30 scope:global
__GXFlushTextureState = .text:0x8001F688; // type:function size:0x24 scope:global
fn_8001F6AC = .text:0x8001F6AC; // type:function size:0x8C
fn_8001F738 = .text:0x8001F738; // type:function size:0x44
fn_8001F77C = .text:0x8001F77C; // type:function size:0x44
fn_8001F7C0 = .text:0x8001F7C0; // type:function size:0x68
fn_8001F828 = .text:0x8001F828; // type:function size:0x68
fn_8001F890 = .text:0x8001F890; // type:function size:0x7C
fn_8001F90C = .text:0x8001F90C; // type:function size:0x5C
fn_8001F968 = .text:0x8001F968; // type:function size:0x5C
fn_8001F9C4 = .text:0x8001F9C4; // type:function size:0x48
fn_8001FA0C = .text:0x8001FA0C; // type:function size:0x80
fn_8001FA8C = .text:0x8001FA8C; // type:function size:0x44
fn_8001FAD0 = .text:0x8001FAD0; // type:function size:0x8C
fn_8001FB5C = .text:0x8001FB5C; // type:function size:0x19C
fn_8001FCF8 = .text:0x8001FCF8; // type:function size:0x28
fn_8001FD20 = .text:0x8001FD20; // type:function size:0x224
fn_8001FF44 = .text:0x8001FF44; // type:function size:0x124
fn_80020068 = .text:0x80020068; // type:function size:0x54
fn_800200BC = .text:0x800200BC; // type:function size:0x2C
fn_800200E8 = .text:0x800200E8; // type:function size:0x2C
fn_80020114 = .text:0x80020114; // type:function size:0x34
fn_80020148 = .text:0x80020148; // type:function size:0x34
fn_8002017C = .text:0x8002017C; // type:function size:0xD4
fn_80020250 = .text:0x80020250; // type:function size:0x2C
fn_8002027C = .text:0x8002027C; // type:function size:0x3C
fn_800202B8 = .text:0x800202B8; // type:function size:0x38
fn_800202F0 = .text:0x800202F0; // type:function size:0x78
fn_80020368 = .text:0x80020368; // type:function size:0xA4
fn_8002040C = .text:0x8002040C; // type:function size:0x8C
fn_80020498 = .text:0x80020498; // type:function size:0x50
fn_800204E8 = .text:0x800204E8; // type:function size:0x50
fn_80020538 = .text:0x80020538; // type:function size:0x34
fn_8002056C = .text:0x8002056C; // type:function size:0xB4
fn_80020620 = .text:0x80020620; // type:function size:0x90
fn_800206B0 = .text:0x800206B0; // type:function size:0x58
fn_80020708 = .text:0x80020708; // type:function size:0x48
fn_80020750 = .text:0x80020750; // type:function size:0x78
fn_800207C8 = .text:0x800207C8; // type:function size:0x40
fn_80020808 = .text:0x80020808; // type:function size:0x28
fn_80020830 = .text:0x80020830; // type:function size:0x84
fn_800208B4 = .text:0x800208B4; // type:function size:0x848
fn_800210FC = .text:0x800210FC; // type:function size:0x1A8
fn_800212A4 = .text:0x800212A4; // type:function size:0x10
fn_800212B4 = .text:0x800212B4; // type:function size:0x2C
fn_800212E0 = .text:0x800212E0; // type:function size:0x2C
fn_8002130C = .text:0x8002130C; // type:function size:0x214
fn_80021520 = .text:0x80021520; // type:function size:0xA8
fn_800215C8 = .text:0x800215C8; // type:function size:0x138
fn_80021700 = .text:0x80021700; // type:function size:0x30
fn_80021730 = .text:0x80021730; // type:function size:0x44
fn_80021774 = .text:0x80021774; // type:function size:0x94
fn_80021808 = .text:0x80021808; // type:function size:0x1C
fn_80021824 = .text:0x80021824; // type:function size:0xC4
__va_arg = .text:0x800218E8; // type:function size:0xC8 scope:global
__destroy_global_chain = .text:0x800219B0; // type:function size:0x48 scope:global
fn_800219F8 = .text:0x800219F8; // type:function size:0x5C
__save_gpr = .text:0x80021A54; // type:function size:0x4C scope:global
_savegpr_14 = .text:0x80021A54; // type:label scope:global
_savegpr_15 = .text:0x80021A58; // type:label scope:global
_savegpr_16 = .text:0x80021A5C; // type:label scope:global
_savegpr_17 = .text:0x80021A60; // type:label scope:global
_savegpr_18 = .text:0x80021A64; // type:label scope:global
_savegpr_19 = .text:0x80021A68; // type:label scope:global
_savegpr_20 = .text:0x80021A6C; // type:label scope:global
_savegpr_21 = .text:0x80021A70; // type:label scope:global
_savegpr_22 = .text:0x80021A74; // type:label scope:global
_savegpr_23 = .text:0x80021A78; // type:label scope:global
_savegpr_24 = .text:0x80021A7C; // type:label scope:global
_savegpr_25 = .text:0x80021A80; // type:label scope:global
_savegpr_26 = .text:0x80021A84; // type:label scope:global
_savegpr_27 = .text:0x80021A88; // type:label scope:global
_savegpr_28 = .text:0x80021A8C; // type:label scope:global
_savegpr_29 = .text:0x80021A90; // type:label scope:global
_savegpr_30 = .text:0x80021A94; // type:label scope:global
_savegpr_31 = .text:0x80021A98; // type:label scope:global
__restore_gpr = .text:0x80021AA0; // type:function size:0x4C scope:global
_restgpr_14 = .text:0x80021AA0; // type:label scope:global
_restgpr_15 = .text:0x80021AA4; // type:label scope:global
_restgpr_16 = .text:0x80021AA8; // type:label scope:global
_restgpr_17 = .text:0x80021AAC; // type:label scope:global
_restgpr_18 = .text:0x80021AB0; // type:label scope:global
_restgpr_19 = .text:0x80021AB4; // type:label scope:global
_restgpr_20 = .text:0x80021AB8; // type:label scope:global
_restgpr_21 = .text:0x80021ABC; // type:label scope:global
_restgpr_22 = .text:0x80021AC0; // type:label scope:global
_restgpr_23 = .text:0x80021AC4; // type:label scope:global
_restgpr_24 = .text:0x80021AC8; // type:label scope:global
_restgpr_25 = .text:0x80021ACC; // type:label scope:global
_restgpr_26 = .text:0x80021AD0; // type:label scope:global
_restgpr_27 = .text:0x80021AD4; // type:label scope:global
_restgpr_28 = .text:0x80021AD8; // type:label scope:global
_restgpr_29 = .text:0x80021ADC; // type:label scope:global
_restgpr_30 = .text:0x80021AE0; // type:label scope:global
_restgpr_31 = .text:0x80021AE4; // type:label scope:global
__div2u = .text:0x80021AEC; // type:function size:0xEC scope:global
fn_80021BD8 = .text:0x80021BD8; // type:function size:0x138
__mod2u = .text:0x80021D10; // type:function size:0xE4 scope:global
fn_80021DF4 = .text:0x80021DF4; // type:function size:0x24
fn_80021E18 = .text:0x80021E18; // type:function size:0x24
fn_80021E3C = .text:0x80021E3C; // type:function size:0x28
fn_80021E64 = .text:0x80021E64; // type:function size:0xCC
fn_80021F30 = .text:0x80021F30; // type:function size:0xB8
exit = .text:0x80021FE8; // type:function size:0xCC scope:global
fn_800220B4 = .text:0x800220B4; // type:function size:0x134
fn_800221E8 = .text:0x800221E8; // type:function size:0x1FC
fn_800223E4 = .text:0x800223E4; // type:function size:0xBC
fn_800224A0 = .text:0x800224A0; // type:function size:0x17C
fn_8002261C = .text:0x8002261C; // type:function size:0x70
__close_all = .text:0x8002268C; // type:function size:0x98 scope:global
fn_80022724 = .text:0x80022724; // type:function size:0x1A4
fn_800228C8 = .text:0x800228C8; // type:function size:0x23C
fn_80022B04 = .text:0x80022B04; // type:function size:0x340
fn_80022E44 = .text:0x80022E44; // type:function size:0xEC
fn_80022F30 = .text:0x80022F30; // type:function size:0x28C
fn_800231BC = .text:0x800231BC; // type:function size:0x110
fn_800232CC = .text:0x800232CC; // type:function size:0x70
__flush_buffer = .text:0x8002333C; // type:function size:0xC4 scope:global
__prep_buffer = .text:0x80023400; // type:function size:0x34 scope:global
__fwrite = .text:0x80023434; // type:function size:0x30C scope:global
fwrite = .text:0x80023740; // type:function size:0x20 scope:global
fn_80023760 = .text:0x80023760; // type:function size:0x138
fn_80023898 = .text:0x80023898; // type:function size:0xC0
fseek = .text:0x80023958; // type:function size:0x20 scope:global
fn_80023978 = .text:0x80023978; // type:function size:0x23C
fn_80023BB4 = .text:0x80023BB4; // type:function size:0x70
wcstombs = .text:0x80023C24; // type:function size:0xA0 scope:global
fn_80023CC4 = .text:0x80023CC4; // type:function size:0xA4
fn_80023D68 = .text:0x80023D68; // type:function size:0x4C
__memrchr = .text:0x80023DB4; // type:function size:0x2C scope:global
memchr = .text:0x80023DE0; // type:function size:0x2C scope:global
memmove = .text:0x80023E0C; // type:function size:0xCC scope:global
fn_80023ED8 = .text:0x80023ED8; // type:function size:0xB0
fn_80023F88 = .text:0x80023F88; // type:function size:0xC4
fn_8002404C = .text:0x8002404C; // type:function size:0xAC
fn_800240F8 = .text:0x800240F8; // type:function size:0xC0
__stdio_atexit = .text:0x800241B8; // type:function size:0x10 scope:global
fn_800241C8 = .text:0x800241C8; // type:function size:0x78
vprintf = .text:0x80024240; // type:function size:0x7C scope:global
fn_800242BC = .text:0x800242BC; // type:function size:0x6C
__FileWrite = .text:0x80024328; // type:function size:0x58 scope:global
__pformatter = .text:0x80024380; // type:function size:0x774 scope:local
float2str = .text:0x80024AF4; // type:function size:0x6EC scope:local
fn_800251E0 = .text:0x800251E0; // type:function size:0x12C
double2hex = .text:0x8002530C; // type:function size:0x338 scope:local
longlong2str = .text:0x80025644; // type:function size:0x2DC scope:local
long2str = .text:0x80025920; // type:function size:0x220 scope:local
parse_format = .text:0x80025B40; // type:function size:0x504 scope:local
strchr = .text:0x80026044; // type:function size:0x30 scope:global
fn_80026074 = .text:0x80026074; // type:function size:0x40
fn_800260B4 = .text:0x800260B4; // type:function size:0x44
fn_800260F8 = .text:0x800260F8; // type:function size:0xB8
strlen = .text:0x800261B0; // type:function size:0x1C scope:global
fn_800261CC = .text:0x800261CC; // type:function size:0x8
fn_800261D4 = .text:0x800261D4; // type:function size:0xC4
fwide = .text:0x80026298; // type:function size:0x88 scope:global
fn_80026320 = .text:0x80026320; // type:function size:0x28
fn_80026348 = .text:0x80026348; // type:function size:0x8C
fn_800263D4 = .text:0x800263D4; // type:function size:0x1C4
fn_80026598 = .text:0x80026598; // type:function size:0xFC
TRKNubMainLoop = .text:0x80026694; // type:function size:0xF8 scope:global
TRKDestructEvent = .text:0x8002678C; // type:function size:0x24 scope:global
fn_800267B0 = .text:0x800267B0; // type:function size:0x18
fn_800267C8 = .text:0x800267C8; // type:function size:0xE0
TRKGetNextEvent = .text:0x800268A8; // type:function size:0xB4 scope:global
TRKInitializeEventQueue = .text:0x8002695C; // type:function size:0x58 scope:global
TRKNubWelcome = .text:0x800269B4; // type:function size:0x28 scope:global
TRKTerminateNub = .text:0x800269DC; // type:function size:0x24 scope:global
TRKInitializeNub = .text:0x80026A00; // type:function size:0x134 scope:global
fn_80026B34 = .text:0x80026B34; // type:function size:0x1DC
fn_80026D10 = .text:0x80026D10; // type:function size:0xF0
fn_80026E00 = .text:0x80026E00; // type:function size:0x98
fn_80026E98 = .text:0x80026E98; // type:function size:0xE8
fn_80026F80 = .text:0x80026F80; // type:function size:0xC8
fn_80027048 = .text:0x80027048; // type:function size:0xB8
fn_80027100 = .text:0x80027100; // type:function size:0x80
fn_80027180 = .text:0x80027180; // type:function size:0xA8
fn_80027228 = .text:0x80027228; // type:function size:0x68
fn_80027290 = .text:0x80027290; // type:function size:0x88
fn_80027318 = .text:0x80027318; // type:function size:0x64
fn_8002737C = .text:0x8002737C; // type:function size:0x54
fn_800273D0 = .text:0x800273D0; // type:function size:0x8C
fn_8002745C = .text:0x8002745C; // type:function size:0xA4
fn_80027500 = .text:0x80027500; // type:function size:0x30
fn_80027530 = .text:0x80027530; // type:function size:0x40
fn_80027570 = .text:0x80027570; // type:function size:0x64
TRKGetBuffer = .text:0x800275D4; // type:function size:0x2C scope:global
fn_80027600 = .text:0x80027600; // type:function size:0xC8
TRKInitializeMessageBuffers = .text:0x800276C8; // type:function size:0x74 scope:global
fn_8002773C = .text:0x8002773C; // type:function size:0x8
TRKInitializeSerialHandler = .text:0x80027744; // type:function size:0x24 scope:global
fn_80027768 = .text:0x80027768; // type:function size:0x50
TRKGetInput = .text:0x800277B8; // type:function size:0x98 scope:global
fn_80027850 = .text:0x80027850; // type:function size:0x2B8
usr_put_initialize = .text:0x80027B08; // type:function size:0x4 scope:global
fn_80027B0C = .text:0x80027B0C; // type:function size:0x88
TRKDispatchMessage = .text:0x80027B94; // type:function size:0x84 scope:global
TRKInitializeDispatcher = .text:0x80027C18; // type:function size:0x18 scope:global
fn_80027C30 = .text:0x80027C30; // type:function size:0x1A4
fn_80027DD4 = .text:0x80027DD4; // type:function size:0x100
fn_80027ED4 = .text:0x80027ED4; // type:function size:0x530
fn_80028404 = .text:0x80028404; // type:function size:0x154
fn_80028558 = .text:0x80028558; // type:function size:0x2F8
fn_80028850 = .text:0x80028850; // type:function size:0x3C8
fn_80028C18 = .text:0x80028C18; // type:function size:0x3CC
fn_80028FE4 = .text:0x80028FE4; // type:function size:0x420
fn_80029404 = .text:0x80029404; // type:function size:0x410
fn_80029814 = .text:0x80029814; // type:function size:0x398
fn_80029BAC = .text:0x80029BAC; // type:function size:0x230
fn_80029DDC = .text:0x80029DDC; // type:function size:0x2D8
fn_8002A0B4 = .text:0x8002A0B4; // type:function size:0xB8
fn_8002A16C = .text:0x8002A16C; // type:function size:0xE4
fn_8002A250 = .text:0x8002A250; // type:function size:0xBC
fn_8002A30C = .text:0x8002A30C; // type:function size:0xB0
fn_8002A3BC = .text:0x8002A3BC; // type:function size:0xB8
fn_8002A474 = .text:0x8002A474; // type:function size:0xC
fn_8002A480 = .text:0x8002A480; // type:function size:0x10
fn_8002A490 = .text:0x8002A490; // type:function size:0x190
fn_8002A620 = .text:0x8002A620; // type:function size:0x120
fn_8002A740 = .text:0x8002A740; // type:function size:0x1A8
fn_8002A8E8 = .text:0x8002A8E8; // type:function size:0x1A4
fn_8002AA8C = .text:0x8002AA8C; // type:function size:0x2C4
fn_8002AD50 = .text:0x8002AD50; // type:function size:0x8
fn_8002AD58 = .text:0x8002AD58; // type:function size:0x8
fn_8002AD60 = .text:0x8002AD60; // type:function size:0x8
fn_8002AD68 = .text:0x8002AD68; // type:function size:0xD8
fn_8002AE40 = .text:0x8002AE40; // type:function size:0x38
fn_8002AE78 = .text:0x8002AE78; // type:function size:0xBC
fn_8002AF34 = .text:0x8002AF34; // type:function size:0x8
fn_8002AF3C = .text:0x8002AF3C; // type:function size:0x8
fn_8002AF44 = .text:0x8002AF44; // type:function size:0x3C
TRKInterruptHandler = .text:0x8002AF80; // type:function size:0x194 scope:global
TRKExceptionHandler = .text:0x8002B114; // type:function size:0x9C scope:global
TRKSwapAndGo = .text:0x8002B1B0; // type:function size:0xC4 scope:global
TRKInterruptHandlerEnableInterrupts = .text:0x8002B274; // type:function size:0x54 scope:global
TRKTargetSetInputPendingPtr = .text:0x8002B2C8; // type:function size:0x10 scope:global
fn_8002B2D8 = .text:0x8002B2D8; // type:function size:0x21C
fn_8002B4F4 = .text:0x8002B4F4; // type:function size:0x18
TRKTargetSetStopped = .text:0x8002B50C; // type:function size:0x10 scope:global
TRKTargetStopped = .text:0x8002B51C; // type:function size:0x10 scope:global
fn_8002B52C = .text:0x8002B52C; // type:function size:0x3C
TRKTargetSupportRequest = .text:0x8002B568; // type:function size:0x208 scope:global
fn_8002B770 = .text:0x8002B770; // type:function size:0x10
fn_8002B780 = .text:0x8002B780; // type:function size:0x7C
fn_8002B7FC = .text:0x8002B7FC; // type:function size:0x6C
fn_8002B868 = .text:0x8002B868; // type:function size:0xAC
fn_8002B914 = .text:0x8002B914; // type:function size:0x124
TRKTargetInterrupt = .text:0x8002BA38; // type:function size:0x15C scope:global
TRKPostInterruptEvent = .text:0x8002BB94; // type:function size:0xC0 scope:global
fn_8002BC54 = .text:0x8002BC54; // type:function size:0x60
fn_8002BCB4 = .text:0x8002BCB4; // type:function size:0xA4
fn_8002BD58 = .text:0x8002BD58; // type:function size:0x24
fn_8002BD7C = .text:0x8002BD7C; // type:function size:0x438
fn_8002C1B4 = .text:0x8002C1B4; // type:function size:0x170
fn_8002C324 = .text:0x8002C324; // type:function size:0x13C
fn_8002C460 = .text:0x8002C460; // type:function size:0xF4
fn_8002C554 = .text:0x8002C554; // type:function size:0x14C
fn_8002C6A0 = .text:0x8002C6A0; // type:function size:0x124
fn_8002C7D0 = .text:0x8002C7D0; // type:function size:0x8
fn_8002C7D8 = .text:0x8002C7D8; // type:function size:0x8
fn_8002C7E0 = .text:0x8002C7E0; // type:function size:0x8
fn_8002C7E8 = .text:0x8002C7E8; // type:function size:0x8
InitMetroTRK = .text:0x8002C7F0; // type:function size:0x94 scope:global
TRKInitializeTarget = .text:0x8002C884; // type:function size:0x4C scope:global
fn_8002C8D0 = .text:0x8002C8D0; // type:function size:0x40
EnableMetroTRKInterrupts = .text:0x8002C910; // type:function size:0x20 scope:global
TRKSaveExtended1Block = .text:0x8002C930; // type:function size:0x1B8 scope:global
TRKRestoreExtended1Block = .text:0x8002CAE8; // type:function size:0x1B8 scope:global
fn_8002CCA0 = .text:0x8002CCA0; // type:function size:0x8
TRK_main = .text:0x8002CCA8; // type:function size:0x44 scope:global
TRKLoadContext = .text:0x8002CCEC; // type:function size:0x88 scope:global
TRKUARTInterruptHandler = .text:0x8002CD74; // type:function size:0x4 scope:global
TRK_board_display = .text:0x8002CD78; // type:function size:0x24 scope:global
UnreserveEXI2Port = .text:0x8002CD9C; // type:function size:0x30 scope:global
ReserveEXI2Port = .text:0x8002CDCC; // type:function size:0x30 scope:global
fn_8002CDFC = .text:0x8002CDFC; // type:function size:0xF0
fn_8002CEEC = .text:0x8002CEEC; // type:function size:0x28
fn_8002CF14 = .text:0x8002CF14; // type:function size:0xE0
fn_8002CFF4 = .text:0x8002CFF4; // type:function size:0x30
TRKInitializeIntDrivenUART = .text:0x8002D024; // type:function size:0x3C scope:global
InitMetroTRKCommTable = .text:0x8002D060; // type:function size:0x100 scope:global
TRKEXICallBack = .text:0x8002D160; // type:function size:0x38 scope:global
TRKTargetContinue = .text:0x8002D198; // type:function size:0x34 scope:global
fn_8002D1CC = .text:0x8002D1CC; // type:function size:0x10
fn_8002D1DC = .text:0x8002D1DC; // type:function size:0xC
fn_8002D1E8 = .text:0x8002D1E8; // type:function size:0xBC
fn_8002D2A4 = .text:0x8002D2A4; // type:function size:0xBC
EXI2_Init = .text:0x8002D360; // type:function size:0x4 scope:global
EXI2_EnableInterrupts = .text:0x8002D364; // type:function size:0x4 scope:global
EXI2_Poll = .text:0x8002D368; // type:function size:0x8 scope:global
EXI2_ReadN = .text:0x8002D370; // type:function size:0x8 scope:global
EXI2_WriteN = .text:0x8002D378; // type:function size:0x8 scope:global
EXI2_Reserve = .text:0x8002D380; // type:function size:0x4 scope:global
EXI2_Unreserve = .text:0x8002D384; // type:function size:0x4 scope:global
AMC_IsStub = .text:0x8002D388; // type:function size:0x8 scope:global
DBClose = .text:0x8002D390; // type:function size:0x4 scope:global
DBOpen = .text:0x8002D394; // type:function size:0x4 scope:global
DBWrite = .text:0x8002D398; // type:function size:0x260 scope:global
DBRead = .text:0x8002D5F8; // type:function size:0x8C scope:global
DBQueryData = .text:0x8002D684; // type:function size:0x9C scope:global
DBInitInterrupts = .text:0x8002D720; // type:function size:0x54 scope:global
DBInitComm = .text:0x8002D774; // type:function size:0x78 scope:global
fn_8002D7EC = .text:0x8002D7EC; // type:function size:0x40
fn_8002D82C = .text:0x8002D82C; // type:function size:0x3C
fn_8002D868 = .text:0x8002D868; // type:function size:0xAC
fn_8002D914 = .text:0x8002D914; // type:function size:0xDC
fn_8002D9F0 = .text:0x8002D9F0; // type:function size:0xDC
fn_8002DACC = .text:0x8002DACC; // type:function size:0xAC
fn_8002DB78 = .text:0x8002DB78; // type:function size:0x298
Hu_IsStub = .text:0x8002DE10; // type:function size:0x8 scope:weak
_ctors = .ctors:0x8002DE20; // type:label scope:global data:4byte
_dtors = .dtors:0x8002DE40; // type:label scope:global data:4byte
__destroy_global_chain_reference = .dtors:0x8002DE40; // type:object size:0x4 scope:global
lbl_8002DE60 = .rodata:0x8002DE60; // type:object size:0x8 data:float
lbl_8002DE68 = .rodata:0x8002DE68; // type:object size:0x10 data:byte
lbl_8002DE78 = .rodata:0x8002DE78; // type:object size:0x18 data:double
lbl_8002DE90 = .rodata:0x8002DE90; // type:object size:0x38
lbl_8002DEC8 = .rodata:0x8002DEC8; // type:object size:0x40
lbl_8002DF08 = .rodata:0x8002DF08; // type:object size:0x18 data:4byte
lbl_8002DF20 = .rodata:0x8002DF20; // type:object size:0xE0
@stringBase0 = .rodata:0x8002E000; // type:object size:0x25 scope:local data:string_table
@62 = .rodata:0x8002E028; // type:object size:0x1B scope:local data:string
lbl_8002E048 = .rodata:0x8002E048; // type:object size:0x20
lbl_8002E068 = .rodata:0x8002E068; // type:object size:0x10 data:4byte
lbl_8002E078 = .rodata:0x8002E078; // type:object size:0x28 data:4byte
lbl_8002E0A0 = .rodata:0x8002E0A0; // type:object size:0x28 data:4byte
lbl_8002E0C8 = .rodata:0x8002E0C8; // type:object size:0x28 data:4byte
@154 = .rodata:0x8002E0F0; // type:object size:0x21 scope:local data:string
@155 = .rodata:0x8002E114; // type:object size:0x24 scope:local data:string
lbl_8002E140 = .data:0x8002E140; // type:object size:0x60 data:4byte
lbl_8002E1A0 = .data:0x8002E1A0; // type:object size:0x1E68
lbl_80030008 = .data:0x80030008; // type:object size:0x113F0
lbl_800413F8 = .data:0x800413F8; // type:object size:0xD08
lbl_80042100 = .data:0x80042100; // type:object size:0x41C
lbl_8004251C = .data:0x8004251C; // type:object size:0x237E
lbl_8004489A = .data:0x8004489A; // type:object size:0x1FC6
@1 = .data:0x80046860; // type:object size:0x44 scope:local data:string
ResetFunctionInfo = .data:0x80046A58; // type:object size:0x10 scope:local
DSPInitCode = .data:0x80046A68; // type:object size:0x80 scope:local
@69 = .data:0x80046AE8; // type:object size:0x29 scope:local data:string
lbl_80046D18 = .data:0x80046D18; // type:object size:0x1B4
@74 = .data:0x80046ECC; // type:object size:0x23 scope:local data:string
@13 = .data:0x80046EF0; // type:object size:0x16 scope:local data:string
@87 = .data:0x800471CC; // type:object size:0x40 scope:local
lbl_80047210 = .data:0x80047210; // type:object size:0x30 data:4byte
lbl_80047240 = .data:0x80047240; // type:object size:0x28
lbl_80047268 = .data:0x80047268; // type:object size:0x28
ResetFunctionInfo = .data:0x80047290; // type:object size:0x10 scope:local
lbl_800472A0 = .data:0x800472A0; // type:object size:0x110
lbl_800473B0 = .data:0x800473B0; // type:object size:0x44 data:string
Si = .data:0x800473F4; // type:object size:0x14 scope:local data:4byte
Type = .data:0x80047408; // type:object size:0x10 scope:local
XYNTSC = .data:0x800474C8; // type:object size:0x30 scope:local
lbl_80047560 = .data:0x80047560; // type:object size:0x18 data:string
lbl_80047578 = .data:0x80047578; // type:object size:0x48
@18 = .data:0x800475C0; // type:object size:0xA scope:local data:string
lbl_800475CC = .data:0x800475CC; // type:object size:0x34 data:string
jumptable_80047600 = .data:0x80047600; // type:object size:0x40 scope:local
lbl_80047640 = .data:0x80047640; // type:object size:0x50 data:4byte
jumptable_80047690 = .data:0x80047690; // type:object size:0x34 scope:local
jumptable_800476C4 = .data:0x800476C4; // type:object size:0x34 scope:local
lbl_800476F8 = .data:0x800476F8; // type:object size:0x48 data:4byte
@36 = .data:0x80047740; // type:object size:0x1A scope:local data:string
lbl_800477B0 = .data:0x800477B0; // type:object size:0x1F4
jumptable_800479A4 = .data:0x800479A4; // type:object size:0x6C scope:local
@724 = .data:0x80047B64; // type:object size:0x1C scope:local
lbl_80047B80 = .data:0x80047B80; // type:object size:0xC
lbl_80047B8C = .data:0x80047B8C; // type:object size:0x68
lbl_80047BF4 = .data:0x80047BF4; // type:object size:0x10C
lbl_80047D00 = .data:0x80047D00; // type:object size:0xC00
lbl_80048900 = .data:0x80048900; // type:object size:0x10 data:4byte
lbl_80048910 = .data:0x80048910; // type:object size:0xC data:string
lbl_8004891C = .data:0x8004891C; // type:object size:0x28
jumptable_80048944 = .data:0x80048944; // type:object size:0x28 scope:local
jumptable_800489C8 = .data:0x800489C8; // type:object size:0x28 scope:local
jumptable_800489F0 = .data:0x800489F0; // type:object size:0x28 scope:local
jumptable_80048A18 = .data:0x80048A18; // type:object size:0x28 scope:local
jumptable_80048A40 = .data:0x80048A40; // type:object size:0x28 scope:local
lbl_80048A68 = .data:0x80048A68; // type:object size:0x48
lbl_80048AB0 = .data:0x80048AB0; // type:object size:0x10
lbl_80048AC0 = .data:0x80048AC0; // type:object size:0x60
lbl_80048B20 = .data:0x80048B20; // type:object size:0x16C
GXTexRegionAddrTable = .data:0x80048C8C; // type:object size:0xC0 scope:local data:4byte
GXResetFuncInfo = .data:0x80048D4C; // type:object size:0x10 scope:local
jumptable_80048D60 = .data:0x80048D60; // type:object size:0x68 scope:local
jumptable_80048DC8 = .data:0x80048DC8; // type:object size:0x44 scope:local
jumptable_80048E0C = .data:0x80048E0C; // type:object size:0x44 scope:local
jumptable_80048E50 = .data:0x80048E50; // type:object size:0x1C scope:local
jumptable_80048E6C = .data:0x80048E6C; // type:object size:0x54 scope:local
lbl_80048EC0 = .data:0x80048EC0; // type:object size:0x3C
lbl_80048EFC = .data:0x80048EFC; // type:object size:0x3C
lbl_80048F38 = .data:0x80048F38; // type:object size:0x3C
lbl_80048F74 = .data:0x80048F74; // type:object size:0x3C
jumptable_80048FB0 = .data:0x80048FB0; // type:object size:0xF4 scope:local
jumptable_800490A4 = .data:0x800490A4; // type:object size:0x3C scope:local
lbl_800490E0 = .data:0x800490E0; // type:object size:0x50
lbl_80049130 = .data:0x80049130; // type:object size:0x28
lbl_80049158 = .data:0x80049158; // type:object size:0x20
jumptable_80049178 = .data:0x80049178; // type:object size:0x5C scope:local
jumptable_800491D4 = .data:0x800491D4; // type:object size:0x90 scope:local
jumptable_80049264 = .data:0x80049264; // type:object size:0x5C scope:local
__files = .data:0x800492C0; // type:object size:0x140 scope:global
jumptable_80049400 = .data:0x80049400; // type:object size:0x124 scope:local
lbl_80049528 = .data:0x80049528; // type:object size:0x100
@1249 = .data:0x80049628; // type:object size:0x84 scope:local
jumptable_800496AC = .data:0x800496AC; // type:object size:0x84 scope:local
jumptable_80049730 = .data:0x80049730; // type:object size:0xE0 scope:local
jumptable_80049810 = .data:0x80049810; // type:object size:0x44 scope:local
lbl_80049858 = .data:0x80049858; // type:object size:0x88
jumptable_800498E0 = .data:0x800498E0; // type:object size:0x1C scope:local
jumptable_800498FC = .data:0x800498FC; // type:object size:0x1C scope:local
gTRKRestoreFlags = .data:0x80049918; // type:object size:0x9 scope:global data:byte
gTRKExceptionStatus = .data:0x80049924; // type:object size:0x10 scope:local data:4byte
lbl_80049934 = .data:0x80049934; // type:object size:0x14 data:4byte
lbl_80049948 = .data:0x80049948; // type:object size:0x40 data:4byte
gDBCommTable = .data:0x80049988; // type:object size:0x1C scope:global data:4byte
lbl_800499C0 = .bss:0x800499C0; // type:object size:0x4 data:4byte
lbl_800499C4 = .bss:0x800499C4; // type:object size:0x1C data:4byte
DriveInfo = .bss:0x800499E0; // type:object size:0x20 scope:local
__OSErrorTable = .bss:0x80049A30; // type:object size:0x44 scope:global data:4byte
lbl_80049A80 = .bss:0x80049A80; // type:object size:0x20
Scb = .bss:0x80049AA0; // type:object size:0x54 scope:local data:4byte
RunQueue = .bss:0x80049AF8; // type:object size:0x100 scope:local data:4byte
Ecb = .bss:0x8004A4F0; // type:object size:0xC0 scope:local data:4byte
Packet = .bss:0x8004A5B0; // type:object size:0x80 scope:local data:4byte
lbl_8004A630 = .bss:0x8004A630; // type:object size:0xA0
TypeTime = .bss:0x8004A6D0; // type:object size:0x20 scope:local
lbl_8004A6F0 = .bss:0x8004A6F0; // type:object size:0x20
lbl_8004A710 = .bss:0x8004A710; // type:object size:0x40
lbl_8004A750 = .bss:0x8004A750; // type:object size:0x60 data:4byte
CommandList = .bss:0x8004A7B0; // type:object size:0x3C scope:local data:4byte
AlarmForTimeout = .bss:0x8004A818; // type:object size:0x28 scope:local
lbl_8004A840 = .bss:0x8004A840; // type:object size:0x40
BB2 = .bss:0x8004A880; // type:object size:0x20 scope:local
lbl_8004A8A0 = .bss:0x8004A8A0; // type:object size:0x20
DummyCommandBlock = .bss:0x8004A8C0; // type:object size:0x30 scope:local
lbl_8004A8F0 = .bss:0x8004A8F0; // type:object size:0x28
WaitingQueue = .bss:0x8004A918; // type:object size:0x20 scope:local data:4byte
bb2Buf = .bss:0x8004A938; // type:object size:0x3F scope:local
block$16 = .bss:0x8004A978; // type:object size:0x30 scope:local
lbl_8004A9A8 = .bss:0x8004A9A8; // type:object size:0xF0 data:2byte
lbl_8004AA98 = .bss:0x8004AA98; // type:object size:0x58 data:2byte
lbl_8004AAF0 = .bss:0x8004AAF0; // type:object size:0x40 data:4byte
lbl_8004AB30 = .bss:0x8004AB30; // type:object size:0x20
lbl_8004AB50 = .bss:0x8004AB50; // type:object size:0x30
lbl_8004AB80 = .bss:0x8004AB80; // type:object size:0x78 data:2byte
lbl_8004ABF8 = .bss:0x8004ABF8; // type:object size:0x10
lbl_8004AC08 = .bss:0x8004AC08; // type:object size:0x40
FifoObj = .bss:0x8004AC48; // type:object size:0x80 scope:local
lbl_8004ACC8 = .bss:0x8004ACC8; // type:object size:0x5B0
__atexit_funcs = .bss:0x8004B278; // type:object size:0x100 scope:local
lbl_8004B378 = .bss:0x8004B378; // type:object size:0x38 data:4byte
lbl_8004B3B0 = .bss:0x8004B3B0; // type:object size:0x100
lbl_8004B4B0 = .bss:0x8004B4B0; // type:object size:0x100
lbl_8004B5B0 = .bss:0x8004B5B0; // type:object size:0x100
lbl_8004B6B0 = .bss:0x8004B6B0; // type:object size:0x28
gTRKBigEndian = .bss:0x8004B6D8; // type:object size:0x4 scope:global data:4byte
lbl_8004B6E0 = .bss:0x8004B6E0; // type:object size:0x19B0
gTRKInputPendingPtr = .bss:0x8004D090; // type:object size:0x4 scope:global data:4byte
lbl_8004D094 = .bss:0x8004D094; // type:object size:0x14 data:4byte
lbl_8004D0A8 = .bss:0x8004D0A8; // type:object size:0x8 data:4byte
lbl_8004D0B0 = .bss:0x8004D0B0; // type:object size:0x8 data:4byte
TRK_saved_exceptionID = .bss:0x8004D0B8; // type:object size:0x2 scope:local data:2byte
gTRKState = .bss:0x8004D0BC; // type:object size:0xA4 scope:global data:4byte
gTRKCPUState = .bss:0x8004D160; // type:object size:0x430 scope:global
gTRKSaveState = .bss:0x8004D590; // type:object size:0x94 scope:global data:4byte
lbl_8004D624 = .bss:0x8004D624; // type:object size:0x14
lbl_8004D638 = .bss:0x8004D638; // type:object size:0x8 data:4byte
TRK_mainError = .bss:0x8004D640; // type:object size:0x4 scope:local data:4byte
lbl_8004D648 = .bss:0x8004D648; // type:object size:0x111C data:4byte
lbl_8004E764 = .bss:0x8004E764; // type:object size:0x110C
lbl_8004F870 = .bss:0x8004F870; // type:object size:0x1 data:byte
__OSVersion = .sdata:0x8004F880; // type:object size:0x4 scope:global data:4byte
@97 = .sdata:0x8004F884; // type:object size:0x6 scope:local data:string
lbl_8004F88C = .sdata:0x8004F88C; // type:object size:0x4 data:string
lbl_8004F890 = .sdata:0x8004F890; // type:object size:0x8 data:4byte
__OSArenaLo = .sdata:0x8004F898; // type:object size:0x4 scope:local data:4byte
lbl_8004F8A0 = .sdata:0x8004F8A0; // type:object size:0x4 data:4byte
@76 = .sdata:0x8004F8A4; // type:object size:0x2 scope:local data:string
SwitchThreadCallback = .sdata:0x8004F8A8; // type:object size:0x4 scope:local data:4byte
__EXIVersion = .sdata:0x8004F8B0; // type:object size:0x4 scope:global data:4byte
__SIVersion = .sdata:0x8004F8B8; // type:object size:0x4 scope:global data:4byte
lbl_8004F8C0 = .sdata:0x8004F8C0; // type:object size:0x8 data:4byte
__DVDVersion = .sdata:0x8004F8C8; // type:object size:0x4 scope:global data:4byte
autoInvalidation = .sdata:0x8004F8CC; // type:object size:0x4 scope:local data:4byte
lbl_8004F8D0 = .sdata:0x8004F8D0; // type:object size:0x4 data:4byte
lbl_8004F8D4 = .sdata:0x8004F8D4; // type:object size:0x8
lbl_8004F8DC = .sdata:0x8004F8DC; // type:object size:0x4 data:4byte
@35 = .sdata:0x8004F8E0; // type:object size:0x2 scope:local data:string
@40 = .sdata:0x8004F8E4; // type:object size:0x4 scope:local data:string
@41 = .sdata:0x8004F8E8; // type:object size:0x3 scope:local data:string
lbl_8004F8F0 = .sdata:0x8004F8F0; // type:object size:0x4 data:4byte
lbl_8004F8F4 = .sdata:0x8004F8F4; // type:object size:0xC
lbl_8004F900 = .sdata:0x8004F900; // type:object size:0x8 data:byte
lbl_8004F908 = .sdata:0x8004F908; // type:object size:0x8 data:string
lbl_8004F910 = .sdata:0x8004F910; // type:object size:0x4 data:4byte
lbl_8004F914 = .sdata:0x8004F914; // type:object size:0x4 data:4byte
lbl_8004F918 = .sdata:0x8004F918; // type:object size:0x4 data:4byte
lbl_8004F91C = .sdata:0x8004F91C; // type:object size:0x4 data:4byte
lbl_8004F920 = .sdata:0x8004F920; // type:object size:0x4 data:4byte
lbl_8004F924 = .sdata:0x8004F924; // type:object size:0x4 data:4byte
lbl_8004F928 = .sdata:0x8004F928; // type:object size:0x4
lbl_8004F92C = .sdata:0x8004F92C; // type:object size:0x4
lbl_8004F930 = .sdata:0x8004F930; // type:object size:0x8 data:4byte
__GXVersion = .sdata:0x8004F938; // type:object size:0x4 scope:global data:4byte
lbl_8004F940 = .sdata:0x8004F940; // type:object size:0x4
lbl_8004F944 = .sdata:0x8004F944; // type:object size:0x4
lbl_8004F948 = .sdata:0x8004F948; // type:object size:0x8
lbl_8004F950 = .sdata:0x8004F950; // type:object size:0x8
lbl_8004F958 = .sdata:0x8004F958; // type:object size:0x8
lbl_8004F960 = .sdata:0x8004F960; // type:object size:0x8
lbl_8004F968 = .sdata:0x8004F968; // type:object size:0x8
lbl_8004F970 = .sdata:0x8004F970; // type:object size:0x8
lbl_8004F978 = .sdata:0x8004F978; // type:object size:0x8
lbl_8004F980 = .sdata:0x8004F980; // type:object size:0x8
lbl_8004F988 = .sdata:0x8004F988; // type:object size:0x8
@wstringBase0 = .sdata:0x8004F990; // type:object size:0x2 scope:local
lbl_8004F998 = .sdata:0x8004F998; // type:object size:0x1 data:byte
BootInfo = .sbss:0x8004F9A0; // type:object size:0x4 scope:local data:4byte
BI2DebugFlag = .sbss:0x8004F9A4; // type:object size:0x4 scope:local data:4byte
BI2DebugFlagHolder = .sbss:0x8004F9A8; // type:object size:0x4 scope:local data:4byte
__OSIsGcam = .sbss:0x8004F9AC; // type:object size:0x4 scope:weak data:4byte
ZeroF = .sbss:0x8004F9B0; // type:object size:0x8 scope:local data:double
ZeroPS = .sbss:0x8004F9B8; // type:object size:0x8 scope:local
AreWeInitialized = .sbss:0x8004F9C0; // type:object size:0x4 scope:local data:4byte
OSExceptionTable = .sbss:0x8004F9C4; // type:object size:0x4 scope:local data:4byte
__OSSavedRegionEnd = .sbss:0x8004F9C8; // type:object size:0x4 scope:global data:4byte
__OSSavedRegionStart = .sbss:0x8004F9CC; // type:object size:0x4 scope:global data:4byte
__OSInIPL = .sbss:0x8004F9D0; // type:object size:0x4 scope:global data:4byte
__OSStartTime = .sbss:0x8004F9D8; // type:object size:0x8 scope:global data:4byte
AlarmQueue = .sbss:0x8004F9E0; // type:object size:0x8 scope:local data:4byte
lbl_8004F9E8 = .sbss:0x8004F9E8; // type:object size:0x4 data:4byte
lbl_8004F9EC = .sbss:0x8004F9EC; // type:object size:0x4 data:4byte
lbl_8004F9F0 = .sbss:0x8004F9F0; // type:object size:0x4 data:4byte
lbl_8004F9F4 = .sbss:0x8004F9F4; // type:object size:0x4 data:4byte
__OSArenaHi = .sbss:0x8004F9F8; // type:object size:0x4 scope:local data:4byte
InterruptHandlerTable = .sbss:0x8004FA00; // type:object size:0x4 scope:local data:4byte
__OSLastInterruptSrr0 = .sbss:0x8004FA04; // type:object size:0x4 scope:global data:4byte
__OSLastInterrupt = .sbss:0x8004FA08; // type:object size:0x2 scope:global data:2byte
__OSLastInterruptTime = .sbss:0x8004FA10; // type:object size:0x8 scope:global data:4byte
lbl_8004FA18 = .sbss:0x8004FA18; // type:object size:0x4 data:4byte
lbl_8004FA1C = .sbss:0x8004FA1C; // type:object size:0x4 data:4byte
lbl_8004FA20 = .sbss:0x8004FA20; // type:object size:0x8 data:4byte
ResetFunctionQueue = .sbss:0x8004FA28; // type:object size:0x8 scope:local data:4byte
bootThisDol = .sbss:0x8004FA30; // type:object size:0x4 scope:local data:4byte
lbl_8004FA38 = .sbss:0x8004FA38; // type:object size:0x4 data:4byte
lbl_8004FA3C = .sbss:0x8004FA3C; // type:object size:0x4 data:4byte
lbl_8004FA40 = .sbss:0x8004FA40; // type:object size:0x8 data:4byte
lbl_8004FA48 = .sbss:0x8004FA48; // type:object size:0x4 data:4byte
lbl_8004FA4C = .sbss:0x8004FA4C; // type:object size:0x4 data:4byte
lbl_8004FA50 = .sbss:0x8004FA50; // type:object size:0x4 data:4byte
lbl_8004FA54 = .sbss:0x8004FA54; // type:object size:0x4 data:4byte
RunQueueBits = .sbss:0x8004FA58; // type:object size:0x4 scope:local data:4byte
RunQueueHint = .sbss:0x8004FA5C; // type:object size:0x4 scope:local data:4byte
Reschedule = .sbss:0x8004FA60; // type:object size:0x4 scope:local data:4byte
Debug_BBA = .sbss:0x8004FA68; // type:object size:0x1 scope:local data:byte
IDSerialPort1 = .sbss:0x8004FA70; // type:object size:0x4 scope:local data:4byte
lbl_8004FA78 = .sbss:0x8004FA78; // type:object size:0x4 data:4byte
lbl_8004FA7C = .sbss:0x8004FA7C; // type:object size:0x4 data:4byte
lbl_8004FA80 = .sbss:0x8004FA80; // type:object size:0x4 data:4byte
lbl_8004FA84 = .sbss:0x8004FA84; // type:object size:0x4 data:4byte
lbl_8004FA88 = .sbss:0x8004FA88; // type:object size:0x4
cmdTypeAndStatus$371 = .sbss:0x8004FA8C; // type:object size:0x4 scope:local
lbl_8004FA90 = .sbss:0x8004FA90; // type:object size:0x8 data:4byte
SamplingRate = .sbss:0x8004FA98; // type:object size:0x4 scope:local data:4byte
__DBInterface = .sbss:0x8004FAA0; // type:object size:0x4 scope:global data:4byte
DBVerbose = .sbss:0x8004FAA4; // type:object size:0x4 scope:global data:4byte
StopAtNextInt = .sbss:0x8004FAA8; // type:object size:0x4 scope:local data:4byte
lbl_8004FAAC = .sbss:0x8004FAAC; // type:object size:0x4 data:4byte
Callback = .sbss:0x8004FAB0; // type:object size:0x4 scope:local data:4byte
lbl_8004FAB4 = .sbss:0x8004FAB4; // type:object size:0x4 data:4byte
LastResetEnd = .sbss:0x8004FAB8; // type:object size:0x8 scope:local data:4byte
ResetOccurred = .sbss:0x8004FAC0; // type:object size:0x4 scope:local data:4byte
WaitingCoverClose = .sbss:0x8004FAC4; // type:object size:0x4 scope:local data:4byte
lbl_8004FAC8 = .sbss:0x8004FAC8; // type:object size:0x4 data:4byte
WorkAroundType = .sbss:0x8004FACC; // type:object size:0x4 scope:local data:4byte
WorkAroundSeekLocation = .sbss:0x8004FAD0; // type:object size:0x4 scope:local data:4byte
lbl_8004FAD8 = .sbss:0x8004FAD8; // type:object size:0x4 data:4byte
lbl_8004FADC = .sbss:0x8004FADC; // type:object size:0x4 data:4byte
lbl_8004FAE0 = .sbss:0x8004FAE0; // type:object size:0x4 data:4byte
lbl_8004FAE4 = .sbss:0x8004FAE4; // type:object size:0x4 data:4byte
lbl_8004FAE8 = .sbss:0x8004FAE8; // type:object size:0x4 data:4byte
NextCommandNumber = .sbss:0x8004FAEC; // type:object size:0x4 scope:local data:4byte
BootInfo = .sbss:0x8004FAF0; // type:object size:0x4 scope:local data:4byte
FstStart = .sbss:0x8004FAF4; // type:object size:0x4 scope:local data:4byte
FstStringStart = .sbss:0x8004FAF8; // type:object size:0x4 scope:local data:4byte
MaxEntryNum = .sbss:0x8004FAFC; // type:object size:0x4 scope:local data:4byte
__DVDLongFileNameFlag = .sbss:0x8004FB00; // type:object size:0x4 scope:global data:4byte
__DVDThreadQueue = .sbss:0x8004FB04; // type:object size:0x8 scope:global
executing = .sbss:0x8004FB10; // type:object size:0x4 scope:local data:4byte
IDShouldBe = .sbss:0x8004FB14; // type:object size:0x4 scope:local data:4byte
bootInfo = .sbss:0x8004FB18; // type:object size:0x4 scope:local data:4byte
PauseFlag = .sbss:0x8004FB1C; // type:object size:0x4 scope:local data:4byte
PausingFlag = .sbss:0x8004FB20; // type:object size:0x4 scope:local data:4byte
lbl_8004FB24 = .sbss:0x8004FB24; // type:object size:0x4 data:4byte
FatalErrorFlag = .sbss:0x8004FB28; // type:object size:0x4 scope:local data:4byte
CurrCommand = .sbss:0x8004FB2C; // type:object size:0x4 scope:local data:4byte
lbl_8004FB30 = .sbss:0x8004FB30; // type:object size:0x4 data:4byte
lbl_8004FB34 = .sbss:0x8004FB34; // type:object size:0x4 data:4byte
ResumeFromHere = .sbss:0x8004FB38; // type:object size:0x4 scope:local data:4byte
CancelLastError = .sbss:0x8004FB3C; // type:object size:0x4 scope:local data:4byte
lbl_8004FB40 = .sbss:0x8004FB40; // type:object size:0x4 data:4byte
lbl_8004FB44 = .sbss:0x8004FB44; // type:object size:0x4 data:4byte
ResetRequired = .sbss:0x8004FB48; // type:object size:0x4 scope:local data:4byte
FirstTimeInBootrom = .sbss:0x8004FB4C; // type:object size:0x4 scope:local data:4byte
DVDInitialized = .sbss:0x8004FB50; // type:object size:0x4 scope:local data:4byte
lbl_8004FB54 = .sbss:0x8004FB54; // type:object size:0x4 data:4byte
lbl_8004FB58 = .sbss:0x8004FB58; // type:object size:0x8 data:4byte
lbl_8004FB60 = .sbss:0x8004FB60; // type:object size:0x4 data:4byte
bb2 = .sbss:0x8004FB64; // type:object size:0x4 scope:local data:4byte
idTmp = .sbss:0x8004FB68; // type:object size:0x4 scope:local data:4byte
lbl_8004FB70 = .sbss:0x8004FB70; // type:object size:0x4 data:4byte
lbl_8004FB74 = .sbss:0x8004FB74; // type:object size:0x4 data:4byte
lbl_8004FB78 = .sbss:0x8004FB78; // type:object size:0x4 data:4byte
lbl_8004FB7C = .sbss:0x8004FB7C; // type:object size:0x8
lbl_8004FB84 = .sbss:0x8004FB84; // type:object size:0x4 data:4byte
lbl_8004FB88 = .sbss:0x8004FB88; // type:object size:0x4 data:4byte
lbl_8004FB8C = .sbss:0x8004FB8C; // type:object size:0x4 data:4byte
lbl_8004FB90 = .sbss:0x8004FB90; // type:object size:0x4 data:4byte
lbl_8004FB94 = .sbss:0x8004FB94; // type:object size:0x2 data:2byte
lbl_8004FB96 = .sbss:0x8004FB96; // type:object size:0x2 data:2byte
lbl_8004FB98 = .sbss:0x8004FB98; // type:object size:0x8 data:4byte
lbl_8004FBA0 = .sbss:0x8004FBA0; // type:object size:0x4 data:4byte
lbl_8004FBA4 = .sbss:0x8004FBA4; // type:object size:0x4 data:4byte
lbl_8004FBA8 = .sbss:0x8004FBA8; // type:object size:0x8 data:4byte
lbl_8004FBB0 = .sbss:0x8004FBB0; // type:object size:0x4 data:4byte
lbl_8004FBB4 = .sbss:0x8004FBB4; // type:object size:0x4 data:4byte
lbl_8004FBB8 = .sbss:0x8004FBB8; // type:object size:0x4 data:4byte
CurrTvMode = .sbss:0x8004FBBC; // type:object size:0x4 scope:local data:4byte
lbl_8004FBC0 = .sbss:0x8004FBC0; // type:object size:0x4 data:4byte
lbl_8004FBC4 = .sbss:0x8004FBC4; // type:object size:0x4 data:4byte
lbl_8004FBC8 = .sbss:0x8004FBC8; // type:object size:0x4 data:4byte
lbl_8004FBCC = .sbss:0x8004FBCC; // type:object size:0x4 data:4byte
lbl_8004FBD0 = .sbss:0x8004FBD0; // type:object size:0x4 data:4byte
lbl_8004FBD4 = .sbss:0x8004FBD4; // type:object size:0x4 data:4byte
lbl_8004FBD8 = .sbss:0x8004FBD8; // type:object size:0x4 data:4byte
lbl_8004FBDC = .sbss:0x8004FBDC; // type:object size:0x4 data:4byte
lbl_8004FBE0 = .sbss:0x8004FBE0; // type:object size:0x4 data:4byte
lbl_8004FBE4 = .sbss:0x8004FBE4; // type:object size:0x4 data:4byte
lbl_8004FBE8 = .sbss:0x8004FBE8; // type:object size:0x4 data:4byte
lbl_8004FBEC = .sbss:0x8004FBEC; // type:object size:0x4 data:4byte
lbl_8004FBF0 = .sbss:0x8004FBF0; // type:object size:0x4 data:4byte
lbl_8004FBF4 = .sbss:0x8004FBF4; // type:object size:0x4 data:4byte
lbl_8004FBF8 = .sbss:0x8004FBF8; // type:object size:0x8 data:4byte
lbl_8004FC00 = .sbss:0x8004FC00; // type:object size:0x8 data:4byte
lbl_8004FC08 = .sbss:0x8004FC08; // type:object size:0x1 data:byte
lbl_8004FC0C = .sbss:0x8004FC0C; // type:object size:0x4 data:4byte
lbl_8004FC10 = .sbss:0x8004FC10; // type:object size:0x4 data:4byte
lbl_8004FC14 = .sbss:0x8004FC14; // type:object size:0x4 data:4byte
lbl_8004FC18 = .sbss:0x8004FC18; // type:object size:0x4 data:4byte
lbl_8004FC1C = .sbss:0x8004FC1C; // type:object size:0x4 data:4byte
lbl_8004FC20 = .sbss:0x8004FC20; // type:object size:0x4 data:4byte
lbl_8004FC24 = .sbss:0x8004FC24; // type:object size:0x4 data:4byte
lbl_8004FC28 = .sbss:0x8004FC28; // type:object size:0x4 data:4byte
lbl_8004FC2C = .sbss:0x8004FC2C; // type:object size:0x4 data:4byte
lbl_8004FC30 = .sbss:0x8004FC30; // type:object size:0x4 data:4byte
lbl_8004FC34 = .sbss:0x8004FC34; // type:object size:0x4 data:4byte
lbl_8004FC38 = .sbss:0x8004FC38; // type:object size:0x4 data:4byte
lbl_8004FC3C = .sbss:0x8004FC3C; // type:object size:0x4 data:4byte
lbl_8004FC40 = .sbss:0x8004FC40; // type:object size:0x4 data:4byte
lbl_8004FC44 = .sbss:0x8004FC44; // type:object size:0x4 data:4byte
lbl_8004FC48 = .sbss:0x8004FC48; // type:object size:0x4 data:4byte
lbl_8004FC4C = .sbss:0x8004FC4C; // type:object size:0x4 data:4byte
lbl_8004FC50 = .sbss:0x8004FC50; // type:object size:0x4 data:4byte
lbl_8004FC54 = .sbss:0x8004FC54; // type:object size:0x4 data:4byte
lbl_8004FC58 = .sbss:0x8004FC58; // type:object size:0x4 data:4byte
lbl_8004FC5C = .sbss:0x8004FC5C; // type:object size:0x4 data:4byte
lbl_8004FC60 = .sbss:0x8004FC60; // type:object size:0x4 data:4byte
lbl_8004FC64 = .sbss:0x8004FC64; // type:object size:0x4 data:4byte
lbl_8004FC68 = .sbss:0x8004FC68; // type:object size:0x8 data:4byte
lbl_8004FC70 = .sbss:0x8004FC70; // type:object size:0x4 data:4byte
lbl_8004FC74 = .sbss:0x8004FC74; // type:object size:0x4 data:4byte
lbl_8004FC78 = .sbss:0x8004FC78; // type:object size:0x4 data:4byte
lbl_8004FC7C = .sbss:0x8004FC7C; // type:object size:0x4 data:4byte
lbl_8004FC80 = .sbss:0x8004FC80; // type:object size:0x4 data:4byte
lbl_8004FC84 = .sbss:0x8004FC84; // type:object size:0x4 data:4byte
lbl_8004FC88 = .sbss:0x8004FC88; // type:object size:0x4 data:4byte
lbl_8004FC8C = .sbss:0x8004FC8C; // type:object size:0x4 data:4byte
lbl_8004FC90 = .sbss:0x8004FC90; // type:object size:0x4 data:4byte
lbl_8004FC94 = .sbss:0x8004FC94; // type:object size:0x4 data:4byte
__PADSpec = .sbss:0x8004FC98; // type:object size:0x4 scope:global data:4byte
lbl_8004FCA0 = .sbss:0x8004FCA0; // type:object size:0x4 data:4byte
lbl_8004FCA4 = .sbss:0x8004FCA4; // type:object size:0x4 data:4byte
lbl_8004FCA8 = .sbss:0x8004FCA8; // type:object size:0x4 data:4byte
lbl_8004FCAC = .sbss:0x8004FCAC; // type:object size:0x4 data:4byte
lbl_8004FCB0 = .sbss:0x8004FCB0; // type:object size:0x4 data:4byte
lbl_8004FCB4 = .sbss:0x8004FCB4; // type:object size:0x4 data:4byte
lbl_8004FCB8 = .sbss:0x8004FCB8; // type:object size:0x4 data:4byte
lbl_8004FCBC = .sbss:0x8004FCBC; // type:object size:0x4 data:4byte
lbl_8004FCC0 = .sbss:0x8004FCC0; // type:object size:0x4 data:4byte
lbl_8004FCC4 = .sbss:0x8004FCC4; // type:object size:0x4 data:4byte
lbl_8004FCC8 = .sbss:0x8004FCC8; // type:object size:0x4 data:4byte
lbl_8004FCCC = .sbss:0x8004FCCC; // type:object size:0x4 data:4byte
lbl_8004FCD0 = .sbss:0x8004FCD0; // type:object size:0x4 data:4byte
lbl_8004FCD4 = .sbss:0x8004FCD4; // type:object size:0x4 data:4byte
lbl_8004FCD8 = .sbss:0x8004FCD8; // type:object size:0x4 data:4byte
lbl_8004FCDC = .sbss:0x8004FCDC; // type:object size:0x4 data:4byte
__piReg = .sbss:0x8004FCE0; // type:object size:0x4 scope:global data:4byte
__cpReg = .sbss:0x8004FCE4; // type:object size:0x4 scope:global data:4byte
__peReg = .sbss:0x8004FCE8; // type:object size:0x4 scope:global data:4byte
__memReg = .sbss:0x8004FCEC; // type:object size:0x4 scope:global data:4byte
lbl_8004FCF0 = .sbss:0x8004FCF0; // type:object size:0x8 data:4byte
lbl_8004FCF8 = .sbss:0x8004FCF8; // type:object size:0x4 data:4byte
lbl_8004FCFC = .sbss:0x8004FCFC; // type:object size:0x4 data:4byte
lbl_8004FD00 = .sbss:0x8004FD00; // type:object size:0x4 data:4byte
resetFuncRegistered$70 = .sbss:0x8004FD04; // type:object size:0x4 scope:local data:4byte
lbl_8004FD08 = .sbss:0x8004FD08; // type:object size:0x4 data:4byte
lbl_8004FD0C = .sbss:0x8004FD0C; // type:object size:0x4 data:4byte
lbl_8004FD10 = .sbss:0x8004FD10; // type:object size:0x4 data:4byte
lbl_8004FD14 = .sbss:0x8004FD14; // type:object size:0x1 data:byte
lbl_8004FD18 = .sbss:0x8004FD18; // type:object size:0x4 data:4byte
lbl_8004FD1C = .sbss:0x8004FD1C; // type:object size:0x4 data:4byte
lbl_8004FD20 = .sbss:0x8004FD20; // type:object size:0x8 data:4byte
lbl_8004FD28 = .sbss:0x8004FD28; // type:object size:0x4 data:4byte
lbl_8004FD2C = .sbss:0x8004FD2C; // type:object size:0x4 data:4byte
lbl_8004FD30 = .sbss:0x8004FD30; // type:object size:0x1 data:byte
lbl_8004FD34 = .sbss:0x8004FD34; // type:object size:0xC
__global_destructor_chain = .sbss:0x8004FD40; // type:object size:0x4 scope:global data:4byte
__aborting = .sbss:0x8004FD48; // type:object size:0x4 scope:global data:4byte
__atexit_curr_func = .sbss:0x8004FD4C; // type:object size:0x4 scope:local data:4byte
__stdio_exit = .sbss:0x8004FD50; // type:object size:0x4 scope:global data:4byte
__console_exit = .sbss:0x8004FD54; // type:object size:0x4 scope:global data:4byte
lbl_8004FD58 = .sbss:0x8004FD58; // type:object size:0x8 data:byte
lbl_8004FD60 = .sbss:0x8004FD60; // type:object size:0x8 data:4byte
lbl_8004FD68 = .sbss:0x8004FD68; // type:object size:0x8 data:4byte
lbl_8004FD70 = .sbss:0x8004FD70; // type:object size:0x4 data:4byte
lbl_8004FD74 = .sbss:0x8004FD74; // type:object size:0x4 data:4byte
lbl_8004FD78 = .sbss:0x8004FD78; // type:object size:0x4 data:4byte
lbl_8004FD7C = .sbss:0x8004FD7C; // type:object size:0x4 data:4byte
lbl_8004FD80 = .sbss:0x8004FD80; // type:object size:0x4 data:4byte
lbl_8004FD84 = .sbss:0x8004FD84; // type:object size:0x1 data:byte
lbl_8004FDA0 = .sdata2:0x8004FDA0; // type:object size:0x4 data:float
lbl_8004FDA4 = .sdata2:0x8004FDA4; // type:object size:0x4 data:float
lbl_8004FDA8 = .sdata2:0x8004FDA8; // type:object size:0x4 data:float
lbl_8004FDAC = .sdata2:0x8004FDAC; // type:object size:0x4 data:float
lbl_8004FDB0 = .sdata2:0x8004FDB0; // type:object size:0x4 data:float
lbl_8004FDB4 = .sdata2:0x8004FDB4; // type:object size:0x4 data:float
lbl_8004FDB8 = .sdata2:0x8004FDB8; // type:object size:0x4 data:float
lbl_8004FDBC = .sdata2:0x8004FDBC; // type:object size:0x4 data:float
lbl_8004FDC0 = .sdata2:0x8004FDC0; // type:object size:0x4 data:float
lbl_8004FDC4 = .sdata2:0x8004FDC4; // type:object size:0x4 data:float
lbl_8004FDC8 = .sdata2:0x8004FDC8; // type:object size:0x8 data:double
lbl_8004FDD0 = .sdata2:0x8004FDD0; // type:object size:0x4 data:float
lbl_8004FDD4 = .sdata2:0x8004FDD4; // type:object size:0x4 data:float
lbl_8004FDD8 = .sdata2:0x8004FDD8; // type:object size:0x8 data:double
lbl_8004FDE0 = .sdata2:0x8004FDE0; // type:object size:0x4 data:float
lbl_8004FDE8 = .sdata2:0x8004FDE8; // type:object size:0x8 data:double
lbl_8004FDF0 = .sdata2:0x8004FDF0; // type:object size:0x8 data:float
lbl_8004FDF8 = .sdata2:0x8004FDF8; // type:object size:0x4 data:float
lbl_8004FE00 = .sdata2:0x8004FE00; // type:object size:0x8 data:double
__GXData = .sdata2:0x8004FE08; // type:object size:0x4 scope:global data:4byte
@289 = .sdata2:0x8004FE0C; // type:object size:0x4 scope:local data:float
@290 = .sdata2:0x8004FE10; // type:object size:0x4 scope:local data:float
lbl_8004FE14 = .sdata2:0x8004FE14; // type:object size:0x4 data:4byte
lbl_8004FE18 = .sdata2:0x8004FE18; // type:object size:0x4 data:4byte
lbl_8004FE1C = .sdata2:0x8004FE1C; // type:object size:0x4 data:4byte
lbl_8004FE20 = .sdata2:0x8004FE20; // type:object size:0x4 data:float
lbl_8004FE24 = .sdata2:0x8004FE24; // type:object size:0x4 data:float
lbl_8004FE28 = .sdata2:0x8004FE28; // type:object size:0x8 data:double
lbl_8004FE30 = .sdata2:0x8004FE30; // type:object size:0x4 data:float
lbl_8004FE38 = .sdata2:0x8004FE38; // type:object size:0x8 data:double
lbl_8004FE40 = .sdata2:0x8004FE40; // type:object size:0x4 data:float
lbl_8004FE48 = .sdata2:0x8004FE48; // type:object size:0x8 data:double
lbl_8004FE50 = .sdata2:0x8004FE50; // type:object size:0x4 data:float
lbl_8004FE54 = .sdata2:0x8004FE54; // type:object size:0x4 data:float
lbl_8004FE58 = .sdata2:0x8004FE58; // type:object size:0x4 data:float
lbl_8004FE5C = .sdata2:0x8004FE5C; // type:object size:0x4 data:float
lbl_8004FE60 = .sdata2:0x8004FE60; // type:object size:0x4 data:float
lbl_8004FE64 = .sdata2:0x8004FE64; // type:object size:0x4 data:float
lbl_8004FE68 = .sdata2:0x8004FE68; // type:object size:0x8 data:float
lbl_8004FE70 = .sdata2:0x8004FE70; // type:object size:0x4 data:float
lbl_8004FE74 = .sdata2:0x8004FE74; // type:object size:0x4 data:float
lbl_8004FE78 = .sdata2:0x8004FE78; // type:object size:0x4 data:float
lbl_8004FE80 = .sdata2:0x8004FE80; // type:object size:0x8 data:double
lbl_8004FE88 = .sdata2:0x8004FE88; // type:object size:0x4 data:float
lbl_8004FE90 = .sdata2:0x8004FE90; // type:object size:0x8 data:double
lbl_8004FE98 = .sdata2:0x8004FE98; // type:object size:0x4 data:float
lbl_8004FEA0 = .sdata2:0x8004FEA0; // type:object size:0x8 data:double
lbl_8004FEA8 = .sdata2:0x8004FEA8; // type:object size:0x4 data:float
lbl_8004FEAC = .sdata2:0x8004FEAC; // type:object size:0x4 data:float
lbl_8004FEB0 = .sdata2:0x8004FEB0; // type:object size:0x4 data:float
lbl_8004FEB8 = .sdata2:0x8004FEB8; // type:object size:0x8 data:double
lbl_8004FEC0 = .sdata2:0x8004FEC0; // type:object size:0x4 data:4byte
lbl_8004FEC8 = .sdata2:0x8004FEC8; // type:object size:0x8 data:double
lbl_8004FED0 = .sdata2:0x8004FED0; // type:object size:0x8 data:double
lbl_8004FED8 = .sdata2:0x8004FED8; // type:object size:0x8 data:double
lbl_8004FEE0 = .sdata2:0x8004FEE0; // type:object size:0x8 data:double
lbl_8004FEE8 = .sdata2:0x8004FEE8; // type:object size:0x8 data:double
lbl_8004FEF0 = .sdata2:0x8004FEF0; // type:object size:0x8 data:double
lbl_8004FEF8 = .sdata2:0x8004FEF8; // type:object size:0x8 data:double
